{
    "0": "SELECT \n    (SELECT COUNT(*) FROM customers WHERE Currency = 'EUR') / \n    (SELECT COUNT(*) FROM customers WHERE Currency = 'CZK') AS Ratio\nFROM customers\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1": "SELECT CustomerID, MIN(Consumption) as Min_Consumption\nFROM yearmonth\nWHERE substr(Date,1,4) = '2012' AND CustomerID IN \n    (SELECT CustomerID FROM customers WHERE Segment = 'LAM')\nGROUP BY CustomerID\nORDER BY Min_Consumption\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "2": "SELECT AVG(Consumption) / 12 AS Average_Monthly_Consumption\nFROM yearmonth\nWHERE substr(Date, 1, 4) = '2013'\nAND CustomerID IN (\n    SELECT CustomerID\n    FROM customers\n    WHERE Segment = 'SME'\n)\t----- bird -----\tdebit_card_specializing",
    "3": "SELECT \n    (SELECT SUM(Consumption) \n     FROM yearmonth \n     JOIN customers ON yearmonth.CustomerID = customers.CustomerID \n     WHERE Currency = 'CZK' \n     AND substr(Date,1,4) = '2012') \n    - \n    (SELECT SUM(Consumption) \n     FROM yearmonth \n     JOIN customers ON yearmonth.CustomerID = customers.CustomerID \n     WHERE Currency = 'EUR' \n     AND substr(Date,1,4) = '2012') \nAS DifferenceInConsumption\t----- bird -----\tdebit_card_specializing",
    "4": "SELECT substr(Date, 1, 4) as Year, sum(Consumption) as TotalConsumption\nFROM yearmonth\nJOIN customers ON yearmonth.CustomerID = customers.CustomerID\nWHERE customers.Currency = 'CZK'\nGROUP BY Year\nORDER BY TotalConsumption DESC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "5": "SELECT Date, MAX(Consumption) \nFROM yearmonth \nJOIN customers ON yearmonth.CustomerID = customers.CustomerID \nWHERE customers.Segment = 'SME' AND SUBSTR(Date,1,4) = '2013' \nGROUP BY Date \nORDER BY Consumption DESC \nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "6": "SELECT \n    (SELECT AVG(Consumption) FROM yearmonth \n     WHERE substr(Date,1,4) = '2013' \n     AND CustomerID IN \n         (SELECT CustomerID FROM customers WHERE Segment = 'SME' AND Currency = 'CZK') \n     ORDER BY Consumption ASC LIMIT 1) \n    - \n    (SELECT AVG(Consumption) FROM yearmonth \n     WHERE substr(Date,1,4) = '2013' \n     AND CustomerID IN \n         (SELECT CustomerID FROM customers WHERE Segment = 'LAM' AND Currency = 'CZK') \n     ORDER BY Consumption ASC LIMIT 1) AS SME_LAM_Difference,\n    (SELECT AVG(Consumption) FROM yearmonth \n     WHERE substr(Date,1,4) = '2013' \n     AND CustomerID IN \n         (SELECT CustomerID FROM customers WHERE Segment = 'LAM' AND Currency = 'CZK') \n     ORDER BY Consumption ASC LIMIT 1) \n    - \n    (SELECT AVG(Consumption) FROM yearmonth \n     WHERE substr(Date,1,4) = '2013' \n     AND CustomerID IN \n         (SELECT CustomerID FROM customers WHERE Segment = 'KAM' AND Currency = 'CZK') \n     ORDER BY Consumption ASC LIMIT 1) AS LAM_KAM_Difference,\n    (SELECT AVG(Consumption) FROM yearmonth \n     WHERE substr(Date,1,4) = '2013' \n     AND CustomerID IN \n         (SELECT CustomerID FROM customers WHERE Segment = 'KAM' AND Currency = 'CZK') \n     ORDER BY Consumption ASC LIMIT 1) \n    - \n    (SELECT AVG(Consumption) FROM yearmonth \n     WHERE substr(Date,1,4) = '2013' \n     AND CustomerID IN \n         (SELECT CustomerID FROM customers WHERE Segment = 'SME' AND Currency = 'CZK') \n     ORDER BY Consumption ASC LIMIT 1) AS KAM_SME_Difference\t----- bird -----\tdebit_card_specializing",
    "7": "SELECT Segment, \n       ((Consumption_2013 - Consumption_2012) / Consumption_2012) * 100 as Percentage_Increase\nFROM\n(\n    SELECT customers.Segment,\n           SUM(case when substr(yearmonth.Date, 1, 4) = '2012' then yearmonth.Consumption else 0 end) as Consumption_2012,\n           SUM(case when substr(yearmonth.Date, 1, 4) = '2013' then yearmonth.Consumption else 0 end) as Consumption_2013\n    FROM customers\n    JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID\n    WHERE customers.Currency = 'EUR'\n    GROUP BY customers.Segment\n) \nORDER BY Percentage_Increase DESC\t----- bird -----\tdebit_card_specializing",
    "8": "SELECT SUM(Consumption) \nFROM yearmonth \nWHERE CustomerID = 6 \nAND SUBSTR(Date,1,6) BETWEEN '201308' AND '201311'\t----- bird -----\tdebit_card_specializing",
    "9": "SELECT \n    (SELECT COUNT(*) FROM gasstations WHERE Country = 'CZE' AND Segment = 'discount') - \n    (SELECT COUNT(*) FROM gasstations WHERE Country = 'SVK' AND Segment = 'discount') AS More_Discount_Stations_Czech_Republic\n\t----- bird -----\tdebit_card_specializing",
    "10": "SELECT \n    (SELECT COUNT(DISTINCT CustomerID) FROM customers WHERE Segment = 'SME' AND Currency = 'CZK') - \n    (SELECT COUNT(DISTINCT CustomerID) FROM customers WHERE Segment = 'SME' AND Currency = 'EUR') AS MoreSMEs\nFROM customers\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "11": "SELECT \n    (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM yearmonth \n    INNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID \n    WHERE customers.Segment = 'LAM')) AS Percentage \nFROM yearmonth \nINNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID \nWHERE customers.Segment = 'LAM' AND yearmonth.Consumption > 46.73\t----- bird -----\tdebit_card_specializing",
    "12": "SELECT \n    (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM customers)) as Percentage\nFROM \n    yearmonth\nWHERE \n    Date LIKE '201202%' AND Consumption > 528.3\t----- bird -----\tdebit_card_specializing",
    "13": "SELECT MAX(Consumption) \nFROM yearmonth \nWHERE substr(Date,1,4) = '2012'\t----- bird -----\tdebit_card_specializing",
    "14": "SELECT products.Description \nFROM products \nJOIN transactions_1k ON products.ProductID = transactions_1k.ProductID \nWHERE substr(transactions_1k.Date,1,6) = '201309'\t----- bird -----\tdebit_card_specializing",
    "15": "SELECT DISTINCT gasstations.Country\nFROM gasstations\nJOIN transactions_1k ON gasstations.GasStationID = transactions_1k.GasStationID\nWHERE SUBSTR(transactions_1k.Date,1,6) = '201306'\t----- bird -----\tdebit_card_specializing",
    "16": "SELECT COUNT(DISTINCT customers.CustomerID)\nFROM customers\nJOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID\nWHERE customers.Currency = 'EUR' AND yearmonth.Consumption > 1000\t----- bird -----\tdebit_card_specializing",
    "17": "SELECT products.Description \nFROM products \nJOIN transactions_1k ON products.ProductID = transactions_1k.ProductID \nJOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID \nWHERE gasstations.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "18": "SELECT DISTINCT Time \nFROM transactions_1k \nINNER JOIN gasstations \nON transactions_1k.GasStationID = gasstations.GasStationID \nWHERE gasstations.ChainID = 11\t----- bird -----\tdebit_card_specializing",
    "19": "SELECT COUNT(*) \nFROM \"transactions_1k\" \nJOIN gasstations ON \"transactions_1k\".GasStationID = gasstations.GasStationID \nWHERE gasstations.Country = 'CZE' AND \"transactions_1k\".Date > '2012-01-01'\t----- bird -----\tdebit_card_specializing",
    "20": "SELECT Currency \nFROM customers \nJOIN transactions_1k \nON customers.CustomerID = transactions_1k.CustomerID \nWHERE Date = '2012-08-24' AND Time = '16:25:00'\t----- bird -----\tdebit_card_specializing",
    "21": "SELECT customers.Segment \nFROM customers \nJOIN transactions_1k \nON customers.CustomerID = transactions_1k.CustomerID \nWHERE transactions_1k.Date = '2012-08-23' AND transactions_1k.Time = '21:20:00'\t----- bird -----\tdebit_card_specializing",
    "22": "SELECT COUNT(*) \nFROM \"transactions_1k\" \nJOIN gasstations ON \"transactions_1k\".GasStationID = gasstations.GasStationID \nWHERE gasstations.Country = 'CZE' \nAND \"transactions_1k\".Date = '2012-08-26' \nAND \"transactions_1k\".Time BETWEEN '08:00:00' AND '09:00:00'\t----- bird -----\tdebit_card_specializing",
    "23": "SELECT gasstations.Country\nFROM transactions_1k\nJOIN customers ON transactions_1k.CustomerID = customers.CustomerID\nJOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID\nWHERE transactions_1k.Date = '2012-08-24' AND transactions_1k.Price * transactions_1k.Amount = 548.4\t----- bird -----\tdebit_card_specializing",
    "24": "SELECT \n    (COUNT(DISTINCT t.CustomerID) * 100.0 / (SELECT COUNT(DISTINCT CustomerID) FROM customers WHERE Currency = 'EUR')) AS percentage\nFROM \n    transactions_1k t\nJOIN \n    customers c ON t.CustomerID = c.CustomerID\nWHERE \n    c.Currency = 'EUR' AND t.Date = '2012-08-25'\t----- bird -----\tdebit_card_specializing",
    "25": "SELECT \n    (consumption_2012 - consumption_2013) / consumption_2012 AS consumption_decrease_rate\nFROM\n    (SELECT \n        yearmonth.CustomerID,\n        SUM(CASE WHEN yearmonth.Date LIKE '2012%' THEN yearmonth.Consumption ELSE 0 END) AS consumption_2012,\n        SUM(CASE WHEN yearmonth.Date LIKE '2013%' THEN yearmonth.Consumption ELSE 0 END) AS consumption_2013\n    FROM \n        yearmonth\n    INNER JOIN \n        transactions_1k ON yearmonth.CustomerID = transactions_1k.CustomerID\n    WHERE \n        transactions_1k.Price * transactions_1k.Amount = 634.8 AND transactions_1k.Date = '2012-08-25'\n    GROUP BY \n        yearmonth.CustomerID) AS subquery\t----- bird -----\tdebit_card_specializing",
    "26": "SELECT \n    (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM gasstations WHERE Country = 'SVK')) as percentage\nFROM \n    gasstations\nWHERE \n    Segment = 'premium' AND Country = 'SVK'\t----- bird -----\tdebit_card_specializing",
    "27": "SELECT SUM(transactions_1k.Amount * transactions_1k.Price) AS TotalSpent\nFROM transactions_1k\nWHERE transactions_1k.CustomerID = 38508\nAND strftime('%Y%m', transactions_1k.Date) = '201201'\t----- bird -----\tdebit_card_specializing",
    "28": "SELECT \n    customers.CustomerID, \n    customers.Currency, \n    SUM(transactions_1k.Price) / SUM(transactions_1k.Amount) as AveragePricePerItem\nFROM \n    customers \nJOIN \n    transactions_1k ON customers.CustomerID = transactions_1k.CustomerID\nGROUP BY \n    customers.CustomerID, customers.Currency\nORDER BY \n    SUM(transactions_1k.Price) DESC\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "29": "SELECT ym.CustomerID, ym.Consumption \nFROM \"yearmonth\" ym \nJOIN \"transactions_1k\" t ON ym.CustomerID = t.CustomerID \nWHERE t.ProductID = 5 AND t.Price / t.Amount > 29.00 AND ym.Date = '201208'\t----- bird -----\tdebit_card_specializing",
    "30": "SELECT major_name \nFROM member \nJOIN major ON member.link_to_major = major.major_id \nWHERE first_name = 'Angela' AND last_name = 'Sanders'\t----- bird -----\tstudent_club",
    "31": "SELECT COUNT(*) \nFROM member \nJOIN attendance ON member.member_id = attendance.link_to_member \nJOIN event ON attendance.link_to_event = event.event_id \nWHERE event.event_name = \"Women's Soccer\" AND member.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "32": "SELECT COUNT(event_id) \nFROM event \nWHERE type = 'Meeting' \nAND event_id IN (\n    SELECT link_to_event \n    FROM attendance \n    GROUP BY link_to_event \n    HAVING COUNT(link_to_member) > 10\n)\t----- bird -----\tstudent_club",
    "33": "SELECT event_name \nFROM event \nWHERE event_id IN (\n    SELECT link_to_event \n    FROM attendance \n    GROUP BY link_to_event \n    HAVING COUNT(link_to_member) > 20\n) \nAND type != 'fundraiser'\t----- bird -----\tstudent_club",
    "34": "SELECT SUM(amount) \nFROM income \nWHERE link_to_member IN \n    (SELECT member_id \n     FROM member \n     WHERE position = 'Vice President')\t----- bird -----\tstudent_club",
    "35": "SELECT first_name, last_name \nFROM member \nJOIN zip_code ON member.zip = zip_code.zip_code \nWHERE zip_code.state = 'Illinois'\t----- bird -----\tstudent_club",
    "36": "SELECT expense_id, approved \nFROM expense \nWHERE link_to_budget IN (\n    SELECT budget_id \n    FROM budget \n    WHERE link_to_event IN (\n        SELECT event_id \n        FROM event \n        WHERE event_name = 'October Meeting' AND event_date = '2019-10-08'\n    )\n)\t----- bird -----\tstudent_club",
    "37": "SELECT AVG(cost) \nFROM expense \nJOIN member ON expense.link_to_member = member.member_id \nWHERE (substr(expense_date, 6, 2) = '09' OR substr(expense_date, 6, 2) = '10') \nAND first_name = 'Elijah' \nAND last_name = 'Allen'\t----- bird -----\tstudent_club",
    "38": "SELECT \n    (SELECT SUM(spent) FROM budget WHERE link_to_event IN (SELECT event_id FROM event WHERE substr(event_date,1,4) = '2019')) - \n    (SELECT SUM(spent) FROM budget WHERE link_to_event IN (SELECT event_id FROM event WHERE substr(event_date,1,4) = '2020')) \nAS difference_in_spent\t----- bird -----\tstudent_club",
    "39": "SELECT notes \nFROM income \nWHERE source = 'Fundraising' AND date_received = '2019-09-14'\t----- bird -----\tstudent_club",
    "40": "SELECT phone \nFROM member \nWHERE first_name = 'Carlo' AND last_name = 'Jacobs'\t----- bird -----\tstudent_club",
    "41": "SELECT event_status \nFROM budget \nJOIN expense ON budget.budget_id = expense.link_to_budget \nJOIN event ON budget.link_to_event = event.event_id \nWHERE expense_description = 'Post Cards, Posters' AND expense_date = '2019-8-20'\t----- bird -----\tstudent_club",
    "42": "SELECT major_name \nFROM member \nJOIN major ON member.link_to_major = major.major_id \nWHERE first_name = 'Brent' AND last_name = 'Thomason'\t----- bird -----\tstudent_club",
    "43": "SELECT COUNT(*) \nFROM member \nJOIN major ON member.link_to_major = major.major_id \nWHERE major.major_name = 'Business' AND member.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "44": "SELECT department \nFROM member \nJOIN major ON member.link_to_major = major.major_id \nWHERE position = 'President'\t----- bird -----\tstudent_club",
    "45": "SELECT date_received \nFROM income \nJOIN member ON income.link_to_member = member.member_id \nWHERE first_name = 'Connor' AND last_name = 'Hilton' AND source = 'Dues'\t----- bird -----\tstudent_club",
    "46": "SELECT COUNT(*) \nFROM (\n    SELECT event_name, SUM(amount) as total_amount \n    FROM budget \n    INNER JOIN event ON budget.link_to_event = event.event_id \n    WHERE category = 'Advertisement' \n    GROUP BY event_name\n) \nWHERE event_name = 'Yearly Kickoff' AND total_amount > (\n    SELECT SUM(amount) \n    FROM budget \n    INNER JOIN event ON budget.link_to_event = event.event_id \n    WHERE category = 'Advertisement' AND event_name = 'October Meeting'\n)\t----- bird -----\tstudent_club",
    "47": "SELECT SUM(cost) as total_cost_of_pizzas\nFROM expense\nWHERE expense_description = 'Pizza'\t----- bird -----\tstudent_club",
    "48": "SELECT COUNT(DISTINCT city) \nFROM zip_code \nWHERE county = 'Orange' AND state = 'Virginia'\t----- bird -----\tstudent_club",
    "49": "SELECT major_name \nFROM member \nJOIN major ON member.link_to_major = major.major_id \nWHERE phone = \"809-555-3360\"\t----- bird -----\tstudent_club",
    "50": "SELECT COUNT(*) \nFROM attendance \nJOIN event ON attendance.link_to_event = event.event_id \nWHERE event.event_name = \"Women's Soccer\"\t----- bird -----\tstudent_club",
    "51": "SELECT member.first_name, member.last_name\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.department = \"School of Applied Sciences, Technology and Education\"\t----- bird -----\tstudent_club",
    "52": "SELECT \n    event.event_name, \n    MAX(budget.spent / budget.amount) as spend_to_budget_ratio\nFROM \n    event \nJOIN \n    budget ON event.event_id = budget.link_to_event\nWHERE \n    event.status = 'Closed'\nGROUP BY \n    event.event_name\nORDER BY \n    spend_to_budget_ratio DESC\nLIMIT 1\t----- bird -----\tstudent_club",
    "53": "SELECT MAX(spent) FROM budget\t----- bird -----\tstudent_club",
    "54": "SELECT SUM(spent) \nFROM budget \nWHERE category = 'Food'\t----- bird -----\tstudent_club",
    "55": "SELECT first_name, last_name \nFROM member \nWHERE member_id IN (\n    SELECT link_to_member \n    FROM attendance \n    GROUP BY link_to_member \n    HAVING COUNT(link_to_event) > 7\n)\t----- bird -----\tstudent_club",
    "56": "SELECT member.first_name, member.last_name\nFROM member\nJOIN budget ON member.member_id = budget.link_to_member\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "57": "SELECT event_name \nFROM event \nJOIN budget ON event.event_id = budget.link_to_event \nJOIN expense ON budget.budget_id = expense.link_to_budget \nORDER BY cost \nLIMIT 1\t----- bird -----\tstudent_club",
    "58": "SELECT \n    (SUM(cost) FILTER (WHERE event_name = 'Yearly Kickoff') / SUM(cost)) * 100 as percentage\nFROM \n    event\nJOIN \n    expense ON event.event_id = expense.link_to_event\t----- bird -----\tstudent_club",
    "59": "SELECT source \nFROM income \nWHERE date_received BETWEEN '2019-09-01' AND '2019-09-30' \nORDER BY amount DESC \nLIMIT 1\t----- bird -----\tstudent_club",
    "60": "SELECT COUNT(*) \nFROM member \nJOIN major ON member.link_to_major = major.major_id \nWHERE major.major_name = 'Physics Teaching'\t----- bird -----\tstudent_club",
    "61": "SELECT event_name \nFROM event \nJOIN budget ON event.event_id = budget.link_to_event \nWHERE category = 'Advertisement' \nORDER BY spent DESC \nLIMIT 1\t----- bird -----\tstudent_club",
    "62": "SELECT * \nFROM attendance \nJOIN member ON attendance.link_to_member = member.member_id \nJOIN event ON attendance.link_to_event = event.event_id \nWHERE member.first_name = 'Maya' AND member.last_name = 'Mclean' AND event.event_name = 'Women\\'s Soccer'\t----- bird -----\tstudent_club",
    "63": "SELECT cost \nFROM expense \nWHERE expense_description = 'Posters' \nAND link_to_budget IN (\n    SELECT budget_id \n    FROM budget \n    WHERE link_to_event IN (\n        SELECT event_id \n        FROM event \n        WHERE event_name = 'September Speaker'\n    )\n)\t----- bird -----\tstudent_club",
    "64": "SELECT event_name \nFROM event \nJOIN budget ON event.event_id = budget.link_to_event \nWHERE status = 'Closed' AND remaining < 0 \nORDER BY remaining ASC \nLIMIT 1\t----- bird -----\tstudent_club",
    "65": "SELECT expense_description, SUM(cost) as total_value\nFROM expense\nWHERE approved = 'Yes' AND link_to_budget IN \n    (SELECT budget_id \n     FROM budget \n     WHERE link_to_event IN \n         (SELECT event_id \n          FROM event \n          WHERE event_name = 'October Meeting'))\nGROUP BY expense_description\t----- bird -----\tstudent_club",
    "66": "SELECT category, SUM(amount) as budgeted_amount\nFROM budget\nINNER JOIN event ON budget.link_to_event = event.event_id\nWHERE event.event_name = 'April Speaker'\nGROUP BY category\nORDER BY budgeted_amount ASC\t----- bird -----\tstudent_club",
    "67": "SELECT SUM(cost) as total_expense \nFROM expense \nWHERE expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
    "68": "SELECT member.first_name, member.last_name, SUM(expense.cost) as total_cost\nFROM member\nJOIN expense ON member.member_id = expense.link_to_member\nWHERE member.member_id = \"rec4BLdZHS2Blfp4v\"\t----- bird -----\tstudent_club",
    "69": "SELECT expense_description \nFROM expense \nJOIN member ON expense.link_to_member = member.member_id \nWHERE member.first_name = 'Sacha' AND member.last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "70": "SELECT type \nFROM event \nWHERE location = 'MU 215'\t----- bird -----\tstudent_club",
    "71": "SELECT member.last_name, major.department, major.college\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "72": "SELECT budget.category \nFROM budget \nJOIN event ON budget.link_to_event = event.event_id \nWHERE event.location = 'MU 215' AND event.type = 'Guest Speaker' AND budget.spent = 0\t----- bird -----\tstudent_club",
    "73": "SELECT \n    (COUNT(income.amount) * 100.0 / (SELECT COUNT(*) FROM member WHERE t_shirt_size = 'Medium')) as percentage\nFROM \n    income \nJOIN \n    member ON income.link_to_member = member.member_id\nWHERE \n    member.t_shirt_size = 'Medium' AND income.amount = 50\t----- bird -----\tstudent_club",
    "74": "SELECT event_name \nFROM event \nWHERE type = 'Game' \nAND status = 'Closed' \nAND event_date BETWEEN '2019-03-15' AND '2020-03-20'\t----- bird -----\tstudent_club",
    "75": "SELECT member.first_name, member.last_name, member.phone\nFROM member\nJOIN expense ON member.member_id = expense.link_to_member\nWHERE expense.cost > (SELECT AVG(cost) FROM expense)\t----- bird -----\tstudent_club",
    "76": "SELECT member.first_name, member.last_name, expense.cost\nFROM member\nJOIN expense ON member.member_id = expense.link_to_member\nWHERE expense.expense_description = 'Water, Veggie tray, supplies'\t----- bird -----\tstudent_club",
    "77": "SELECT member.first_name, member.last_name, income.amount\nFROM member\nJOIN income ON member.member_id = income.link_to_member\nWHERE income.date_received = '9/9/2019'\t----- bird -----\tstudent_club",
    "78": "SELECT \n    (SELECT COUNT(ID) FROM Patient WHERE SEX = 'M' AND Admission = '+') as InPatientMale,\n    (SELECT COUNT(ID) FROM Patient WHERE SEX = 'M' AND Admission = '-') as OutPatientMale,\n    ((SELECT COUNT(ID) FROM Patient WHERE SEX = 'M' AND Admission = '+') - (SELECT COUNT(ID) FROM Patient WHERE SEX = 'M' AND Admission = '-')) * 100.0 / (SELECT COUNT(ID) FROM Patient WHERE SEX = 'M') as DeviationPercentage\nFROM Patient\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "79": "SELECT \n    (COUNT(ID) * 100.0 / (SELECT COUNT(ID) FROM Patient WHERE SEX = 'F')) as Percentage\nFROM \n    Patient\nWHERE \n    SEX = 'F' AND strftime('%Y', Birthday) > '1930'\t----- bird -----\tthrombosis_prediction",
    "80": "SELECT \n    SUM(CASE WHEN Admission = '+' THEN 1 ELSE 0 END) / SUM(CASE WHEN Admission = '-' THEN 1 ELSE 0 END) AS Ratio\nFROM \n    Patient\nWHERE \n    Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "81": "SELECT Patient.Diagnosis, Laboratory.Date\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.ID = 30609\t----- bird -----\tthrombosis_prediction",
    "82": "SELECT Patient.ID, Patient.SEX, Patient.Birthday\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.LDH > 500\t----- bird -----\tthrombosis_prediction",
    "83": "SELECT Patient.ID, (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) as Age\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Examination.RVVT = '+'\t----- bird -----\tthrombosis_prediction",
    "84": "SELECT Patient.ID, Patient.SEX, Patient.Diagnosis\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Examination.Thrombosis = 2\t----- bird -----\tthrombosis_prediction",
    "85": "SELECT COUNT(*) \nFROM Patient \nWHERE SEX = 'F' \nAND strftime('%Y', Description) = '1997' \nAND Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "86": "SELECT COUNT(*) \nFROM Patient \nWHERE SEX = 'F' AND ID IN \n    (SELECT ID \n     FROM Examination \n     WHERE Thrombosis = 1 AND strftime('%Y', `Examination Date`) = '1997')\t----- bird -----\tthrombosis_prediction",
    "87": "SELECT Symptoms, Diagnosis \nFROM Examination \nWHERE ID = (\n    SELECT ID \n    FROM Patient \n    WHERE Birthday = (\n        SELECT MAX(Birthday) \n        FROM Patient\n    )\n) \nAND Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "88": "SELECT Laboratory.Date, (julianday(Patient.`First Date`) - julianday(Patient.Birthday)) / 365 AS Age\nFROM Laboratory\nJOIN Patient ON Laboratory.ID = Patient.ID\nWHERE Patient.Diagnosis = 'SJS'\nORDER BY Laboratory.Date ASC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "89": "SELECT \n    (SELECT COUNT(*) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.SEX = 'M' AND l.UA <= 8.0) / \n    (SELECT COUNT(*) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.SEX = 'F' AND l.UA <= 6.5) \nAS Male_Female_Ratio_Abnormal_UA\t----- bird -----\tthrombosis_prediction",
    "90": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Patient \nJOIN Examination \nON Patient.ID = Examination.ID \nWHERE strftime('%Y', Patient.Birthday) > strftime('%Y', Examination.`Examination Date`) - 18 \nAND strftime('%Y', Examination.`Examination Date`) BETWEEN '1990' AND '1993'\t----- bird -----\tthrombosis_prediction",
    "91": "SELECT Patient.ID, `Examination Date`, Birthday, Diagnosis, MAX(HGB), \n       (strftime('%Y', `Examination Date`) - strftime('%Y', Birthday)) as Age \nFROM Examination \nJOIN Patient ON Examination.ID = Patient.ID \nORDER BY HGB DESC \nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "92": "SELECT `aCL IgM` \nFROM Examination \nWHERE ID = (SELECT ID FROM Patient WHERE Diagnosis = 'SLE' AND Description = '1994-02-19') \nAND `Examination Date` = '1993-11-12'\t----- bird -----\tthrombosis_prediction",
    "93": "SELECT \n    (SUM(case when Patient.Birthday = '1959-02-18' and strftime('%Y-%m', Laboratory.Date) = '1981-11' then Laboratory.`T-CHO` else 0 end) - \n    SUM(case when Patient.Birthday = '1959-02-18' and strftime('%Y-%m', Laboratory.Date) = '1981-12' then Laboratory.`T-CHO` else 0 end)) / \n    SUM(case when Patient.Birthday = '1959-02-18' and strftime('%Y-%m', Laboratory.Date) = '1981-12' then Laboratory.`T-CHO` else 0 end) as DecreaseRate\nFROM \n    Patient\nJOIN \n    Laboratory ON Patient.ID = Laboratory.ID\nWHERE \n    Patient.Birthday = '1959-02-18' and \n    (strftime('%Y-%m', Laboratory.Date) = '1981-11' or strftime('%Y-%m', Laboratory.Date) = '1981-12')\t----- bird -----\tthrombosis_prediction",
    "94": "SELECT Patient.ID\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Examination.`Examination Date` BETWEEN '1987-07-06' AND '1996-01-31'\nAND Laboratory.GPT > 30\nAND Laboratory.ALB < 4\t----- bird -----\tthrombosis_prediction",
    "95": "SELECT COUNT(*) \nFROM Examination \nWHERE Thrombosis = 2 \nAND `ANA Pattern` = 'S' \nAND `aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Examination)\t----- bird -----\tthrombosis_prediction",
    "96": "SELECT Patient.ID, Patient.SEX, Patient.Birthday, Patient.Description, Patient.`First Date`, Patient.Admission, Patient.Diagnosis\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.Admission = '-' AND Laboratory.Date LIKE '1991-10%' AND Laboratory.`T-BIL` < 2.0\t----- bird -----\tthrombosis_prediction",
    "97": "SELECT AVG(ALB) \nFROM Laboratory \nJOIN Patient ON Laboratory.ID = Patient.ID \nWHERE SEX = 'F' AND PLT > 400 AND Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "98": "SELECT COUNT(*) \nFROM Patient \nWHERE SEX = 'F' AND Diagnosis = 'APS'\t----- bird -----\tthrombosis_prediction",
    "99": "SELECT \n    (CAST(SUM(CASE WHEN SEX = 'F' THEN 1 ELSE 0 END) AS REAL) / COUNT(SEX)) * 100 AS Percentage\nFROM \n    Patient\nWHERE \n    STRFTIME('%Y', Birthday) = '1980' AND Diagnosis = 'RA'\t----- bird -----\tthrombosis_prediction",
    "100": "SELECT CASE \n    WHEN SEX = 'M' AND UA > 8.0 THEN 'Yes'\n    WHEN SEX = 'F' AND UA > 6.5 THEN 'Yes'\n    ELSE 'No'\n    END AS 'Is UA Normal'\nFROM Laboratory\nJOIN Patient ON Laboratory.ID = Patient.ID\nWHERE Laboratory.ID = 57266\t----- bird -----\tthrombosis_prediction",
    "101": "SELECT ID \nFROM Patient \nWHERE SEX = 'M' \nAND ID IN (SELECT ID FROM Laboratory WHERE GPT >= 60)\t----- bird -----\tthrombosis_prediction",
    "102": "SELECT Patient.Birthday, Patient.Diagnosis\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.GPT > 60\nORDER BY Patient.Birthday ASC\t----- bird -----\tthrombosis_prediction",
    "103": "SELECT Patient.ID, Patient.SEX, Patient.Birthday\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.UN = 29\t----- bird -----\tthrombosis_prediction",
    "104": "SELECT SEX, GROUP_CONCAT(DISTINCT Patient.ID) \nFROM Patient \nJOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE `T-BIL` >= 2.0 \nGROUP BY SEX\t----- bird -----\tthrombosis_prediction",
    "105": "SELECT AVG(YEAR(CURRENT_DATE) - YEAR(Birthday)) AS Average_Age\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE SEX = 'M' AND `T-CHO` >= 250\t----- bird -----\tthrombosis_prediction",
    "106": "SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.TG >= 200 AND (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) > 50\t----- bird -----\tthrombosis_prediction",
    "107": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Patient \nJOIN Laboratory \nON Patient.ID = Laboratory.ID \nWHERE Patient.SEX = 'M' \nAND YEAR(Patient.Birthday) BETWEEN 1936 AND 1956 \nAND Laboratory.CPK >= 250\t----- bird -----\tthrombosis_prediction",
    "108": "SELECT Patient.ID, Patient.SEX, (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) as Age\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.GLU >= 180 AND Laboratory.`T-CHO` < 250\t----- bird -----\tthrombosis_prediction",
    "109": "SELECT Patient.ID, (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) as Age, Patient.Diagnosis\nFROM Patient\nJOIN Laboratory\nON Patient.ID = Laboratory.ID\nWHERE Laboratory.RBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "110": "SELECT Patient.ID, Patient.SEX\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.Diagnosis = 'SLE' AND Laboratory.HGB > 10 AND Laboratory.HGB < 17\nORDER BY Patient.Birthday\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "111": "SELECT Patient.ID, (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) as Age\nFROM Patient\nJOIN Laboratory\nON Patient.ID = Laboratory.ID\nWHERE Laboratory.HCT >= 52\nGROUP BY Patient.ID\nHAVING COUNT(Laboratory.ID) >= 2\t----- bird -----\tthrombosis_prediction",
    "112": "SELECT \n    (SELECT COUNT(*) FROM Laboratory WHERE PLT < 100) AS LowerThanNormal,\n    (SELECT COUNT(*) FROM Laboratory WHERE PLT > 400) AS HigherThanNormal\t----- bird -----\tthrombosis_prediction",
    "113": "SELECT Patient.ID, Patient.SEX, Patient.Birthday, Laboratory.PLT\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) < 50\nAND strftime('%Y', Laboratory.Date) = '1984'\nAND Laboratory.PLT BETWEEN 100 AND 400\t----- bird -----\tthrombosis_prediction",
    "114": "SELECT \n    (COUNT(case when Laboratory.PT >= 14 and Patient.SEX = 'F' then 1 end) * 100.0) / COUNT(case when Laboratory.PT >= 14 then 1 end) as Percentage\nFROM \n    Patient\nJOIN \n    Laboratory ON Patient.ID = Laboratory.ID\nWHERE \n    (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) > 55\t----- bird -----\tthrombosis_prediction",
    "115": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Patient \nJOIN Laboratory \nON Patient.ID = Laboratory.ID \nWHERE Patient.SEX = 'M' \nAND Laboratory.WBC > 3.5 \nAND Laboratory.WBC < 9.0 \nAND (Laboratory.FG <= 150 OR Laboratory.FG >= 450)\t----- bird -----\tthrombosis_prediction",
    "116": "SELECT COUNT(DISTINCT ID) \nFROM Laboratory \nWHERE IGG >= 2000\t----- bird -----\tthrombosis_prediction",
    "117": "SELECT COUNT(*) \nFROM Patient \nJOIN Laboratory ON Patient.ID = Laboratory.ID \nJOIN Examination ON Patient.ID = Examination.ID \nWHERE Laboratory.IGG > 900 AND Laboratory.IGG < 2000 AND Examination.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "118": "SELECT COUNT(*) \nFROM Patient \nJOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE IGA BETWEEN 80 AND 500 AND `First Date` >= '1990-01-01'\t----- bird -----\tthrombosis_prediction",
    "119": "SELECT Diagnosis, COUNT(Diagnosis) as Count\nFROM Patient\nWHERE ID IN (\n    SELECT ID\n    FROM Laboratory\n    WHERE IGM <= 40 OR IGM >= 400\n)\nGROUP BY Diagnosis\nORDER BY Count DESC\nLIMIT 1\t----- bird -----\tthrombosis_prediction",
    "120": "SELECT COUNT(*) \nFROM Patient \nWHERE ID IN (SELECT ID FROM Laboratory WHERE CRP = '+') \nAND Description IS NULL\t----- bird -----\tthrombosis_prediction",
    "121": "SELECT COUNT(*) \nFROM Patient \nJOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE Laboratory.CRE >= 1.5 AND (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) < 70\t----- bird -----\tthrombosis_prediction",
    "122": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Patient \nJOIN Laboratory \nON Patient.ID = Laboratory.ID \nWHERE (Laboratory.RNP = '-' OR Laboratory.RNP = '+-') \nAND Patient.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "123": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Patient \nJOIN Laboratory ON Patient.ID = Laboratory.ID \nJOIN Examination ON Patient.ID = Examination.ID \nWHERE (Laboratory.SM IN('-', '+-')) AND (Examination.Thrombosis = 0)\t----- bird -----\tthrombosis_prediction",
    "124": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Patient \nJOIN Examination ON Patient.ID = Examination.ID \nWHERE Patient.SEX = 'F' \nAND Examination.Symptoms IS NULL \nAND Examination.SC170 IN ('negative', '0')\t----- bird -----\tthrombosis_prediction",
    "125": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Patient \nJOIN Laboratory \nON Patient.ID = Laboratory.ID \nWHERE Laboratory.CENTROMEA IN('-', '+-') \nAND Laboratory.SSB IN('-', '+-') \nAND Patient.SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "126": "SELECT MIN(Birthday) \nFROM Patient \nWHERE ID IN (\n    SELECT ID \n    FROM Laboratory \n    WHERE GOT >= 60\n)\t----- bird -----\tthrombosis_prediction",
    "127": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Patient \nJOIN Laboratory ON Patient.ID = Laboratory.ID \nJOIN Examination ON Patient.ID = Examination.ID \nWHERE Laboratory.CPK < 250 AND (Examination.KCT = '+' OR Examination.RVVT = '+' OR Examination.LAC = '+')\t----- bird -----\tthrombosis_prediction",
    "128": "SELECT League.name\nFROM League\nJOIN Match ON League.id = Match.league_id\nWHERE Match.season = '2015/2016'\nGROUP BY League.id\nORDER BY SUM(Match.home_team_goal + Match.away_team_goal) DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "129": "SELECT Team.team_long_name\nFROM Match\nJOIN League ON Match.league_id = League.id\nJOIN Team ON Match.away_team_api_id = Team.team_api_id\nWHERE League.name = 'Scotland Premier League' AND Match.season = '2009/2010' AND Match.away_team_goal > Match.home_team_goal\nGROUP BY Match.away_team_api_id\nORDER BY COUNT(*) DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "130": "SELECT team_api_id, MAX(buildUpPlaySpeed) as Speed\nFROM Team_Attributes\nGROUP BY team_api_id\nORDER BY Speed DESC\nLIMIT 4\t----- bird -----\teuropean_football_2",
    "131": "SELECT League.name\nFROM Match\nJOIN League ON Match.league_id = League.id\nWHERE Match.season = '2015/2016' AND Match.home_team_goal = Match.away_team_goal\nGROUP BY League.name\nORDER BY COUNT(*) DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "132": "SELECT Player.player_name, Player.birthday, (strftime('%Y', 'now') - strftime('%Y', Player.birthday)) as age\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player_Attributes.sprint_speed >= 97 AND strftime('%Y', Player_Attributes.date) BETWEEN '2013' AND '2015'\t----- bird -----\teuropean_football_2",
    "133": "SELECT League.name, COUNT(Match.league_id) AS Matches_Played\nFROM Match\nJOIN League ON Match.league_id = League.id\nGROUP BY Match.league_id\nORDER BY Matches_Played DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "134": "SELECT team_fifa_api_id \nFROM Team_Attributes \nWHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60\t----- bird -----\teuropean_football_2",
    "135": "SELECT team_long_name \nFROM Team \nWHERE team_api_id IN \n    (SELECT team_api_id \n    FROM Team_Attributes \n    WHERE buildUpPlayPassing > \n        (SELECT AVG(buildUpPlayPassing) \n        FROM Team_Attributes \n        WHERE buildUpPlayPassing IS NOT NULL AND strftime('%Y', date) = '2012') \n    AND strftime('%Y', date) = '2012')\t----- bird -----\teuropean_football_2",
    "136": "SELECT \n    (CAST(SUM(CASE WHEN preferred_foot = 'left' THEN 1 ELSE 0 END) AS FLOAT) / COUNT(player_fifa_api_id)) * 100 AS percentage\nFROM \n    Player\nWHERE \n    strftime('%Y', birthday) BETWEEN '1987' AND '1992'\t----- bird -----\teuropean_football_2",
    "137": "SELECT AVG(long_shots) \nFROM Player_Attributes \nWHERE player_fifa_api_id = (SELECT player_fifa_api_id FROM Player WHERE player_name = 'Ahmed Samir Farag')\t----- bird -----\teuropean_football_2",
    "138": "SELECT Player.player_name, AVG(Player_Attributes.heading_accuracy) as avg_heading_accuracy\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player.height > 180\nGROUP BY Player.player_name\nORDER BY avg_heading_accuracy DESC\nLIMIT 10\t----- bird -----\teuropean_football_2",
    "139": "SELECT League.name\nFROM League\nJOIN Match ON League.id = Match.league_id\nWHERE Match.season = '2009/2010'\nGROUP BY League.id\nHAVING AVG(Match.home_team_goal) > AVG(Match.away_team_goal)\t----- bird -----\teuropean_football_2",
    "140": "SELECT player_name \nFROM Player \nWHERE strftime('%Y', birthday) = '1970' AND strftime('%m', birthday) = '10'\t----- bird -----\teuropean_football_2",
    "141": "SELECT overall_rating \nFROM Player_Attributes \nWHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Gabriel Tamas') \nAND strftime('%Y', date) = '2011'\t----- bird -----\teuropean_football_2",
    "142": "SELECT AVG(home_team_goal) \nFROM Match \nJOIN Country ON Match.country_id = Country.id \nWHERE Country.name = 'Poland' AND season = '2010/2011'\t----- bird -----\teuropean_football_2",
    "143": "SELECT player_name, AVG(finishing) as avg_finishing\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE Player.height IN (SELECT MAX(height) FROM Player UNION SELECT MIN(height) FROM Player)\nGROUP BY player_name\nORDER BY avg_finishing DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "144": "SELECT AVG(t2.overall_rating) \nFROM Player_Attributes AS t2 \nJOIN Player AS t1 ON t2.player_api_id = t1.player_api_id \nWHERE t1.height > 170 AND strftime('%Y', t2.date) BETWEEN '2010' AND '2015'\t----- bird -----\teuropean_football_2",
    "145": "SELECT \n    (SELECT AVG(ball_control) \n     FROM Player_Attributes \n     WHERE player_api_id = (SELECT player_api_id \n                            FROM Player \n                            WHERE player_name = 'Abdou Diallo')) - \n    (SELECT AVG(ball_control) \n     FROM Player_Attributes \n     WHERE player_api_id = (SELECT player_api_id \n                            FROM Player \n                            WHERE player_name = 'Aaron Appindangoye')) \nAS difference_of_avg_ball_control\t----- bird -----\teuropean_football_2",
    "146": "SELECT player_name, birthday \nFROM Player \nWHERE player_name IN ('Aaron Lennon', 'Abdelaziz Barrada') \nORDER BY birthday ASC \nLIMIT 1\t----- bird -----\teuropean_football_2",
    "147": "SELECT player_name, MAX(height) \nFROM Player\t----- bird -----\teuropean_football_2",
    "148": "SELECT COUNT(*) \nFROM Player_Attributes \nWHERE preferred_foot = 'left' \nAND attacking_work_rate = 'low'\t----- bird -----\teuropean_football_2",
    "149": "SELECT COUNT(DISTINCT player_api_id) \nFROM Player_Attributes \nWHERE player_api_id IN (SELECT player_api_id FROM Player WHERE strftime('%Y', birthday)<'1986') \nAND defensive_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "150": "SELECT player_name \nFROM Player \nWHERE player_api_id IN \n    (SELECT player_api_id \n     FROM Player_Attributes \n     WHERE volleys > 70 AND dribbling > 70)\t----- bird -----\teuropean_football_2",
    "151": "SELECT COUNT(*) \nFROM Match \nJOIN League ON Match.league_id = League.id \nWHERE League.name = 'Belgium Jupiler League' \nAND SUBSTR(Match.date, 1, 7) = '2009-04'\t----- bird -----\teuropean_football_2",
    "152": "SELECT League.name\nFROM League\nJOIN Match ON League.id = Match.league_id\nWHERE Match.season = '2008/2009'\nGROUP BY League.name\nORDER BY COUNT(*) DESC\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "153": "SELECT ((SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Ariel Borysiuk')) - (SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Paulin Puel'))) / (SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Paulin Puel')) * 100 AS percentage_difference\t----- bird -----\teuropean_football_2",
    "154": "SELECT AVG(T1.overall_rating) \nFROM Player_Attributes AS T1 \nJOIN Player AS T2 ON T1.player_api_id = T2.player_api_id \nWHERE T2.player_name = 'Pietro Marino'\t----- bird -----\teuropean_football_2",
    "155": "SELECT MAX(chanceCreationPassing), chanceCreationPassingClass \nFROM Team_Attributes \nWHERE team_api_id = (SELECT team_api_id FROM Team WHERE team_long_name = 'Ajax')\t----- bird -----\teuropean_football_2",
    "156": "SELECT Player.player_name\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE Player_Attributes.date LIKE '2016-06-23%' AND Player_Attributes.overall_rating = 77\nORDER BY Player.birthday\nLIMIT 1\t----- bird -----\teuropean_football_2",
    "157": "SELECT overall_rating \nFROM Player_Attributes \nWHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Mooy') \nAND date LIKE '2016-02-04%'\t----- bird -----\teuropean_football_2",
    "158": "SELECT attacking_work_rate \nFROM Player_Attributes \nWHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Francesco Migliore') \nAND date LIKE '2015-05-01%'\t----- bird -----\teuropean_football_2",
    "159": "SELECT MIN(date) \nFROM Player_Attributes \nWHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Kevin Constant') \nAND crossing = (SELECT MAX(crossing) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Kevin Constant'))\t----- bird -----\teuropean_football_2",
    "160": "SELECT buildUpPlayPassingClass \nFROM Team_Attributes \nWHERE date LIKE '2010-02-22%' \nAND team_api_id IN (SELECT team_api_id FROM Team WHERE team_long_name = 'FC Lorient')\t----- bird -----\teuropean_football_2",
    "161": "SELECT defenceAggressionClass \nFROM Team_Attributes \nWHERE team_api_id = (SELECT team_api_id FROM Team WHERE team_long_name = 'Hannover 96') \nAND date LIKE '2015-09-10%'\t----- bird -----\teuropean_football_2",
    "162": "SELECT AVG(overall_rating) \nFROM Player_Attributes \nWHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Marko Arnautovic') \nAND substr(date, 1, 10) BETWEEN '2007-02-22' AND '2016-04-21'\t----- bird -----\teuropean_football_2",
    "163": "SELECT \n    ((ld.overall_rating - jb.overall_rating) / ld.overall_rating) * 100 AS percentage_difference\nFROM \n    Player_Attributes AS ld\nJOIN \n    Player_Attributes AS jb\nON \n    ld.date = jb.date\nWHERE \n    ld.player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Landon Donovan') \n    AND jb.player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Jordan Bowery') \n    AND ld.date = '2013-07-12'\t----- bird -----\teuropean_football_2",
    "164": "SELECT player_name \nFROM Player \nWHERE height = (SELECT MAX(height) FROM Player)\t----- bird -----\teuropean_football_2",
    "165": "SELECT player_name \nFROM Player \nWHERE player_api_id = (\n    SELECT player_api_id \n    FROM Player_Attributes \n    WHERE overall_rating = (\n        SELECT MAX(overall_rating) \n        FROM Player_Attributes\n    )\n)\t----- bird -----\teuropean_football_2",
    "166": "SELECT player_name \nFROM Player \nWHERE player_api_id IN (\n    SELECT player_api_id \n    FROM Player_Attributes \n    WHERE attacking_work_rate = 'high'\n)\t----- bird -----\teuropean_football_2",
    "167": "SELECT team_short_name \nFROM Team \nWHERE team_api_id IN \n    (SELECT team_api_id \n    FROM Team_Attributes \n    WHERE chanceCreationPassingClass = 'Safe')\t----- bird -----\teuropean_football_2",
    "168": "SELECT COUNT(*) \nFROM Player \nWHERE player_name LIKE 'Aaron%' \nAND birthday > '1990-12-31'\t----- bird -----\teuropean_football_2",
    "169": "SELECT (SELECT jumping FROM Player_Attributes WHERE player_api_id = 6) - (SELECT jumping FROM Player_Attributes WHERE player_api_id = 23) AS jumping_difference\t----- bird -----\teuropean_football_2",
    "170": "SELECT player_api_id \nFROM Player_Attributes \nWHERE preferred_foot = 'right' \nORDER BY potential ASC \nLIMIT 4\t----- bird -----\teuropean_football_2",
    "171": "SELECT COUNT(*) \nFROM Player_Attributes \nWHERE crossing = (SELECT MAX(crossing) FROM Player_Attributes) \nAND preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
    "172": "SELECT home_team_goal, away_team_goal \nFROM Match \nJOIN League ON Match.league_id = League.id \nWHERE date LIKE '2008-09-24%' AND League.name = 'Belgium Jupiler League'\t----- bird -----\teuropean_football_2",
    "173": "SELECT buildUpPlaySpeedClass \nFROM Team_Attributes \nWHERE team_api_id = (SELECT team_api_id FROM Team WHERE team_long_name = 'KSV Cercle Brugge')\t----- bird -----\teuropean_football_2",
    "174": "SELECT finishing, curve \nFROM Player_Attributes \nWHERE player_api_id = (\n    SELECT player_api_id \n    FROM Player \n    WHERE weight = (\n        SELECT MAX(weight) \n        FROM Player\n    )\n)\t----- bird -----\teuropean_football_2",
    "175": "SELECT League.name, COUNT(Match.id) as num_games\nFROM Match\nJOIN League ON Match.league_id = League.id\nWHERE Match.season = '2015/2016'\nGROUP BY League.name\nORDER BY num_games DESC\nLIMIT 4\t----- bird -----\teuropean_football_2",
    "176": "SELECT team_long_name \nFROM Team \nWHERE team_api_id = (\n    SELECT away_team_api_id \n    FROM Match \n    GROUP BY away_team_api_id \n    ORDER BY SUM(away_team_goal) DESC \n    LIMIT 1\n)\t----- bird -----\teuropean_football_2",
    "177": "SELECT player_name \nFROM Player \nWHERE player_api_id = (\n    SELECT player_api_id \n    FROM Player_Attributes \n    WHERE overall_rating = (\n        SELECT MAX(overall_rating) \n        FROM Player_Attributes\n    )\n)\t----- bird -----\teuropean_football_2",
    "178": "SELECT \n    (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Player_Attributes)) as percentage\nFROM \n    Player_Attributes\nJOIN \n    Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE \n    Player.height < 180 AND Player_Attributes.strength > 70\t----- bird -----\teuropean_football_2",
    "179": "SELECT drivers.driverRef \nFROM drivers \nJOIN qualifying ON drivers.driverId = qualifying.driverId \nWHERE qualifying.raceId = 20 \nORDER BY qualifying.q1 DESC \nLIMIT 5\t----- bird -----\tformula_1",
    "180": "SELECT drivers.surname \nFROM drivers \nJOIN qualifying ON drivers.driverId = qualifying.driverId \nWHERE qualifying.raceId = 19 AND qualifying.q2 = (SELECT MIN(q2) FROM qualifying WHERE raceId = 19)\t----- bird -----\tformula_1",
    "181": "SELECT name \nFROM races \nJOIN circuits ON races.circuitId = circuits.circuitId \nWHERE circuits.country = 'Germany'\t----- bird -----\tformula_1",
    "182": "SELECT circuits.lat, circuits.lng \nFROM circuits \nJOIN races ON circuits.circuitId = races.circuitId \nWHERE races.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "183": "SELECT lat, lng \nFROM circuits \nJOIN races ON circuits.circuitId = races.circuitId \nWHERE races.name = 'Abu Dhabi Grand Prix'\t----- bird -----\tformula_1",
    "184": "SELECT q1 \nFROM qualifying \nJOIN drivers ON qualifying.driverId = drivers.driverId \nWHERE raceId = 354 AND forename = 'Bruno' AND surname = 'Senna'\t----- bird -----\tformula_1",
    "185": "SELECT number \nFROM drivers \nWHERE driverId = (\n    SELECT driverId \n    FROM qualifying \n    WHERE raceId = 903 AND q3 LIKE '1:54%'\n)\t----- bird -----\tformula_1",
    "186": "SELECT COUNT(*) \nFROM results \nJOIN races ON results.raceId = races.raceId \nWHERE races.name = 'Bahrain Grand Prix' AND races.year = 2007 AND results.time IS NULL\t----- bird -----\tformula_1",
    "187": "SELECT drivers.forename, drivers.surname, drivers.dob\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nWHERE results.raceId = 592 AND results.time IS NOT NULL\nORDER BY drivers.dob\nLIMIT 1\t----- bird -----\tformula_1",
    "188": "SELECT drivers.url \nFROM drivers \nJOIN lapTimes ON drivers.driverId = lapTimes.driverId \nWHERE lapTimes.time LIKE '1:27%' AND lapTimes.raceId = 161\t----- bird -----\tformula_1",
    "189": "SELECT circuits.lat, circuits.lng \nFROM circuits \nJOIN races ON circuits.circuitId = races.circuitId \nWHERE races.name = 'Malaysian Grand Prix'\t----- bird -----\tformula_1",
    "190": "SELECT constructors.url\nFROM constructors\nJOIN constructorResults ON constructors.constructorId = constructorResults.constructorId\nWHERE constructorResults.raceId = 9\nORDER BY constructorResults.points DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "191": "SELECT code \nFROM drivers \nWHERE driverId = (\n    SELECT driverId \n    FROM qualifying \n    WHERE raceId = 45 AND q3 LIKE '0:01:33%'\n)\t----- bird -----\tformula_1",
    "192": "SELECT url \nFROM seasons \nWHERE year = (SELECT year FROM races WHERE raceId = 901)\t----- bird -----\tformula_1",
    "193": "SELECT drivers.driverRef, drivers.dob \nFROM drivers \nJOIN results ON drivers.driverId = results.driverId \nWHERE results.raceId = 872 AND results.time IS NOT NULL \nORDER BY drivers.dob DESC \nLIMIT 1\t----- bird -----\tformula_1",
    "194": "SELECT nationality \nFROM drivers \nWHERE driverId = (\n    SELECT driverId \n    FROM results \n    WHERE fastestLapSpeed = (\n        SELECT MAX(fastestLapSpeed) \n        FROM results\n    )\n)\t----- bird -----\tformula_1",
    "195": "SELECT \n    ((r1.fastestLapSpeed - r2.fastestLapSpeed) / r1.fastestLapSpeed) * 100 AS percent_faster\nFROM \n    results AS r1\nJOIN \n    drivers AS d ON r1.driverId = d.driverId\nJOIN \n    results AS r2 ON r1.driverId = r2.driverId\nWHERE \n    d.forename = 'Paul' AND d.surname = 'di Resta' AND r1.raceId = 853 AND r2.raceId = 854\t----- bird -----\tformula_1",
    "196": "SELECT drivers.driverId, drivers.forename, drivers.surname, \n       COUNT(results.time) * 100.0 / COUNT(results.driverId) as completion_rate\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE races.date = '1983-07-16'\nGROUP BY drivers.driverId, drivers.forename, drivers.surname\t----- bird -----\tformula_1",
    "197": "SELECT name \nFROM races \nWHERE strftime('%Y', date) = (SELECT strftime('%Y', MIN(date)) FROM races) \nAND strftime('%m', date) = (SELECT strftime('%m', MIN(date)) FROM races)\t----- bird -----\tformula_1",
    "198": "SELECT drivers.forename, drivers.surname, MAX(driverStandings.points) as max_points\nFROM drivers\nJOIN driverStandings ON drivers.driverId = driverStandings.driverId\t----- bird -----\tformula_1",
    "199": "SELECT min(lapTimes.milliseconds), drivers.forename, drivers.surname, races.name\nFROM lapTimes\nJOIN drivers ON lapTimes.driverId = drivers.driverId\nJOIN races ON lapTimes.raceId = races.raceId\t----- bird -----\tformula_1",
    "200": "SELECT AVG(lapTimes.milliseconds)\nFROM lapTimes\nJOIN drivers ON lapTimes.driverId = drivers.driverId\nJOIN races ON lapTimes.raceId = races.raceId\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.name = 'Malaysian Grand Prix' AND races.year = 2009\t----- bird -----\tformula_1",
    "201": "SELECT \n    (COUNT(raceId) * 1.0 / (SELECT COUNT(raceId) FROM races WHERE year >= 2010)) * 100 AS percentage\nFROM \n    races \nJOIN \n    drivers ON races.driverId = drivers.driverId \nWHERE \n    drivers.surname = 'Hamilton' AND races.position > 1 AND races.year >= 2010\t----- bird -----\tformula_1",
    "202": "SELECT drivers.forename, drivers.surname, drivers.nationality, MAX(driverStandings.points) as max_points\nFROM drivers\nJOIN driverStandings ON drivers.driverId = driverStandings.driverId\nGROUP BY drivers.driverId\nORDER BY COUNT(driverStandings.wins) DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "203": "SELECT MIN(strftime('%Y', 'now') - strftime('%Y', dob)) AS age, forename, surname \nFROM drivers \nWHERE nationality = 'Japanese'\t----- bird -----\tformula_1",
    "204": "SELECT races.name, circuits.name, circuits.location \nFROM races \nJOIN circuits ON races.circuitId = circuits.circuitId \nWHERE strftime('%Y', races.date) = '2005' AND strftime('%m', races.date) = '09'\t----- bird -----\tformula_1",
    "205": "SELECT races.name \nFROM races \nJOIN results ON races.raceId = results.raceId \nJOIN drivers ON results.driverId = drivers.driverId \nWHERE drivers.forename = 'Alex' AND drivers.surname = 'Yoong' AND results.position < 20\t----- bird -----\tformula_1",
    "206": "SELECT races.name AS race, races.year AS year\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE drivers.forename = 'Michael' AND drivers.surname = 'Schumacher'\nORDER BY results.fastestLapTime ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "207": "SELECT races.year, races.name, results.points\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\nORDER BY races.year ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "208": "SELECT \n    (COUNT(*) * 100.0 / \n        (SELECT COUNT(*) \n         FROM races \n         JOIN circuits ON races.circuitId = circuits.circuitId \n         WHERE races.name = 'European Grand Prix')) as percentage\nFROM races \nJOIN circuits ON races.circuitId = circuits.circuitId \nWHERE races.name = 'European Grand Prix' AND circuits.country = 'Germany'\t----- bird -----\tformula_1",
    "209": "SELECT lat, lng \nFROM circuits \nWHERE name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "210": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit'\t----- bird -----\tformula_1",
    "211": "SELECT nationality \nFROM drivers \nWHERE dob = (SELECT MIN(dob) FROM drivers)\t----- bird -----\tformula_1",
    "212": "SELECT drivers.driverRef \nFROM drivers \nJOIN results ON drivers.driverId = results.driverId \nJOIN races ON results.raceId = races.raceId \nWHERE races.name = 'Canadian Grand Prix' AND races.year = 2007 AND results.positionOrder = 1\t----- bird -----\tformula_1",
    "213": "SELECT races.name \nFROM results \nJOIN drivers ON results.driverId = drivers.driverId \nJOIN races ON results.raceId = races.raceId \nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' \nORDER BY results.rank ASC \nLIMIT 1\t----- bird -----\tformula_1",
    "214": "SELECT MAX(fastestLapSpeed) \nFROM results \nJOIN races ON results.raceId = races.raceId \nWHERE races.name = 'Spanish Grand Prix' AND races.year = 2009\t----- bird -----\tformula_1",
    "215": "SELECT results.positionOrder \nFROM results \nJOIN drivers ON results.driverId = drivers.driverId \nJOIN races ON results.raceId = races.raceId \nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.name = 'Chinese Grand Prix' AND races.year = 2008\t----- bird -----\tformula_1",
    "216": "SELECT time \nFROM results \nJOIN races ON results.raceId = races.raceId \nWHERE races.name = 'Chinese Grand Prix' AND races.year = 2008 AND results.positionOrder = 2\t----- bird -----\tformula_1",
    "217": "SELECT COUNT(DISTINCT drivers.driverId) \nFROM drivers \nJOIN results ON drivers.driverId = results.driverId \nJOIN races ON results.raceId = races.raceId \nWHERE races.year = 2008 AND races.name = 'Chinese Grand Prix' AND results.time IS NOT NULL AND results.raceId IN (SELECT raceId FROM races)\t----- bird -----\tformula_1",
    "218": "SELECT ((j1.time - j2.time) / j2.time) * 100 as percentage_faster\nFROM\n    (SELECT milliseconds as time\n    FROM results\n    WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') \n    AND positionOrder = 1) as j1,\n    (SELECT milliseconds as time\n    FROM results\n    WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') \n    ORDER BY positionOrder DESC\n    LIMIT 1) as j2\t----- bird -----\tformula_1",
    "219": "SELECT COUNT(*) FROM circuits WHERE location = 'Adelaide' AND country = 'Australia'\t----- bird -----\tformula_1",
    "220": "SELECT MAX(points) \nFROM constructorResults \nWHERE constructorId IN (\n    SELECT constructorId \n    FROM constructors \n    WHERE nationality = 'British'\n)\t----- bird -----\tformula_1",
    "221": "SELECT constructors.name \nFROM constructors \nJOIN constructorResults ON constructors.constructorId = constructorResults.constructorId \nWHERE constructorResults.points = 0 AND constructorResults.raceId = 291\t----- bird -----\tformula_1",
    "222": "SELECT COUNT(*) \nFROM constructors \nJOIN constructorResults ON constructors.constructorId = constructorResults.constructorId \nWHERE constructors.nationality = 'Japanese' AND constructorResults.points = 0 \nGROUP BY constructors.constructorId \nHAVING COUNT(constructorResults.raceId) = 2\t----- bird -----\tformula_1",
    "223": "SELECT \n    (COUNT(DISTINCT CASE WHEN r.time IS NOT NULL THEN r.driverId END) * 1.0 / COUNT(DISTINCT r.driverId)) * 100 AS completion_percentage\nFROM \n    results r\nJOIN \n    drivers d ON r.driverId = d.driverId\nJOIN \n    races ra ON r.raceId = ra.raceId\nWHERE \n    d.nationality = 'Japanese' AND ra.year BETWEEN 2007 AND 2009\t----- bird -----\tformula_1",
    "224": "SELECT \n    races.year, \n    AVG(strftime('%s', results.time) - strftime('%s', '00:00')) as average_time \nFROM \n    results \nJOIN \n    races ON results.raceId = races.raceId \nJOIN \n    driverStandings ON races.raceId = driverStandings.raceId AND results.driverId = driverStandings.driverId \nWHERE \n    races.year < 1975 AND \n    driverStandings.position = 1 AND \n    results.time IS NOT NULL \nGROUP BY \n    races.year\t----- bird -----\tformula_1",
    "225": "SELECT fastestLap \nFROM results \nJOIN races ON results.raceId = races.raceId \nJOIN driverStandings ON races.raceId = driverStandings.raceId \nWHERE races.year = 2009 AND driverStandings.position = 1 \nORDER BY results.fastestLapTime \nLIMIT 1\t----- bird -----\tformula_1",
    "226": "SELECT AVG(fastestLapSpeed) \nFROM results \nWHERE raceId = (\n    SELECT raceId \n    FROM races \n    WHERE name = 'Spanish Grand Prix' AND year = 2009\n)\t----- bird -----\tformula_1",
    "227": "SELECT \n    (COUNT(DISTINCT drivers.driverId)* 100.0 / \n    (SELECT COUNT(DISTINCT drivers.driverId) \n    FROM drivers \n    JOIN results ON drivers.driverId = results.driverId \n    JOIN races ON results.raceId = races.raceId \n    WHERE races.year BETWEEN 2000 AND 2005)) AS percentage \nFROM drivers \nJOIN results ON drivers.driverId = results.driverId \nJOIN races ON results.raceId = races.raceId \nWHERE races.year BETWEEN 2000 AND 2005 \nAND drivers.dob < '1985-01-01' \nAND results.laps > 50\t----- bird -----\tformula_1",
    "228": "SELECT COUNT(DISTINCT drivers.driverId) \nFROM drivers \nJOIN lapTimes ON drivers.driverId = lapTimes.driverId \nWHERE drivers.nationality = 'French' AND lapTimes.milliseconds < 120000\t----- bird -----\tformula_1",
    "229": "SELECT * FROM drivers WHERE nationality = 'American'\t----- bird -----\tformula_1",
    "230": "SELECT code \nFROM drivers \nWHERE nationality = 'Dutch' \nORDER BY dob DESC \nLIMIT 3\t----- bird -----\tformula_1",
    "231": "SELECT driverRef \nFROM drivers \nWHERE nationality = 'German' \nORDER BY dob \nLIMIT 1\t----- bird -----\tformula_1",
    "232": "SELECT drivers.driverId, drivers.code\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nWHERE strftime('%Y', drivers.dob) = '1971' AND results.fastestLapTime IS NOT NULL\nORDER BY results.fastestLapTime ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "233": "SELECT COUNT(*) \nFROM results \nWHERE raceId BETWEEN 50 AND 100 \nAND statusId = 2 \nAND time IS NOT NULL\t----- bird -----\tformula_1",
    "234": "SELECT count(*), location, lat, lng FROM circuits WHERE country = 'Austria'\t----- bird -----\tformula_1",
    "235": "SELECT MIN(races.date) as first_race_date, races.year as first_race_year, drivers.forename, drivers.surname, races.name as race_name, races.time as race_time\nFROM qualifying\nJOIN drivers ON qualifying.driverId = drivers.driverId\nJOIN races ON qualifying.raceId = races.raceId\nWHERE drivers.dob = (SELECT MAX(dob) FROM drivers)\nGROUP BY drivers.driverId\t----- bird -----\tformula_1",
    "236": "SELECT drivers.forename, drivers.surname, AVG(pitStops.milliseconds) as avg_duration\nFROM drivers\nJOIN pitStops ON drivers.driverId = pitStops.driverId\nWHERE drivers.nationality = 'German' AND strftime('%Y', drivers.dob) BETWEEN '1980' AND '1985'\nGROUP BY drivers.driverId\nORDER BY avg_duration ASC\nLIMIT 3\t----- bird -----\tformula_1",
    "237": "SELECT drivers.forename, drivers.surname, results.time \nFROM results \nJOIN drivers ON results.driverId = drivers.driverId \nJOIN races ON results.raceId = races.raceId \nWHERE races.name = 'Canadian Grand Prix' AND races.year = 2008 AND results.positionOrder = 1\t----- bird -----\tformula_1",
    "238": "SELECT constructors.constructorRef, constructors.url\nFROM constructors\nJOIN results ON constructors.constructorId = results.constructorId\nJOIN races ON results.raceId = races.raceId\nWHERE races.name = 'Singapore Grand Prix' AND races.year = 2009\nORDER BY results.time ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "239": "SELECT power_name \nFROM superpower \nJOIN hero_power ON superpower.id = hero_power.power_id \nJOIN superhero ON hero_power.hero_id = superhero.id \nWHERE superhero.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "240": "SELECT \n    constructors.name, \n    constructors.nationality, \n    SUM(constructorResults.points) as total_points\nFROM \n    constructorResults\nJOIN \n    races ON constructorResults.raceId = races.raceId\nJOIN \n    constructors ON constructorResults.constructorId = constructors.constructorId\nJOIN \n    circuits ON races.circuitId = circuits.circuitId\nWHERE \n    circuits.name = 'Monaco Grand Prix' \n    AND races.year BETWEEN 1980 AND 2010\nGROUP BY \n    constructors.constructorId\nORDER BY \n    total_points DESC\nLIMIT 1\t----- bird -----\tformula_1",
    "241": "SELECT drivers.forename, drivers.surname\nFROM qualifying\nJOIN drivers ON qualifying.driverId = drivers.driverId\nJOIN races ON qualifying.raceId = races.raceId\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE races.year = 2008 AND circuits.name = 'Marina Bay Street Circuit' AND qualifying.position = 1\nORDER BY qualifying.q3 ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "242": "SELECT drivers.forename, drivers.surname, drivers.nationality, races.name\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE drivers.dob = (SELECT MAX(dob) FROM drivers)\nORDER BY races.date ASC\nLIMIT 1\t----- bird -----\tformula_1",
    "243": "SELECT driverId, COUNT(*) as accidents \nFROM results \nWHERE raceId IN (SELECT raceId FROM races WHERE name LIKE '%Canadian Grand Prix%') AND statusId = 3 \nGROUP BY driverId \nORDER BY accidents DESC \nLIMIT 1\t----- bird -----\tformula_1",
    "244": "SELECT drivers.forename, drivers.surname, MIN(lapTimes.time) as shortest_lap_time\nFROM drivers\nJOIN lapTimes ON drivers.driverId = lapTimes.driverId\nGROUP BY drivers.driverId\nORDER BY shortest_lap_time ASC\nLIMIT 20\t----- bird -----\tformula_1",
    "245": "SELECT \n    circuits.name AS circuit_name, \n    MIN(lapTimes.time) AS lap_record\nFROM \n    circuits\nJOIN \n    races ON circuits.circuitId = races.circuitId\nJOIN \n    lapTimes ON races.raceId = lapTimes.raceId\nWHERE \n    circuits.country = 'Italy'\nGROUP BY \n    circuits.name\t----- bird -----\tformula_1",
    "246": "SELECT COUNT(*) \nFROM superhero \nJOIN hero_power ON superhero.id = hero_power.hero_id \nJOIN superpower ON hero_power.power_id = superpower.id \nWHERE superpower.power_name = 'Super Strength' AND superhero.height_cm > 200\t----- bird -----\tsuperhero",
    "247": "SELECT COUNT(*) \nFROM superhero \nJOIN colour ON superhero.eye_colour_id = colour.id \nJOIN hero_power ON superhero.id = hero_power.hero_id \nJOIN superpower ON hero_power.power_id = superpower.id \nWHERE colour.colour = 'Blue' AND superpower.power_name = 'Agility'\t----- bird -----\tsuperhero",
    "248": "SELECT superhero_name \nFROM superhero \nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id \nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id \nWHERE eye_colour.colour = 'Blue' AND hair_colour.colour = 'Blond'\t----- bird -----\tsuperhero",
    "249": "SELECT superhero.superhero_name, superhero.height_cm\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE publisher.publisher_name = 'Marvel Comics'\nORDER BY superhero.height_cm DESC\t----- bird -----\tsuperhero",
    "250": "SELECT colour.colour, COUNT(superhero.id) AS count\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE publisher.publisher_name = 'Marvel Comics'\nGROUP BY colour.colour\nORDER BY count DESC\t----- bird -----\tsuperhero",
    "251": "SELECT superhero.superhero_name \nFROM superhero \nJOIN publisher ON superhero.publisher_id = publisher.id \nJOIN hero_power ON superhero.id = hero_power.hero_id \nJOIN superpower ON hero_power.power_id = superpower.id \nWHERE publisher.publisher_name = 'Marvel Comics' AND superpower.power_name = 'Super Strength'\t----- bird -----\tsuperhero",
    "252": "SELECT publisher.publisher_name \nFROM publisher \nJOIN superhero ON publisher.id = superhero.publisher_id \nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id \nJOIN attribute ON hero_attribute.attribute_id = attribute.id \nWHERE attribute.attribute_name = 'Speed' \nORDER BY hero_attribute.attribute_value ASC \nLIMIT 1\t----- bird -----\tsuperhero",
    "253": "SELECT COUNT(*) \nFROM superhero \nJOIN colour ON superhero.eye_colour_id = colour.id \nJOIN publisher ON superhero.publisher_id = publisher.id \nWHERE colour.colour = 'Gold' AND publisher.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "254": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Intelligence'\nORDER BY hero_attribute.attribute_value ASC\nLIMIT 1\t----- bird -----\tsuperhero",
    "255": "SELECT race.race \nFROM superhero \nJOIN race ON superhero.race_id = race.id \nWHERE superhero.superhero_name = 'Copycat'\t----- bird -----\tsuperhero",
    "256": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Durability' AND hero_attribute.attribute_value < 50\t----- bird -----\tsuperhero",
    "257": "SELECT superhero.superhero_name \nFROM superhero \nJOIN hero_power ON superhero.id = hero_power.hero_id \nJOIN superpower ON hero_power.power_id = superpower.id \nWHERE superpower.power_name = 'Death Touch'\t----- bird -----\tsuperhero",
    "258": "SELECT COUNT(*) \nFROM superhero \nJOIN gender ON superhero.gender_id = gender.id \nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id \nJOIN attribute ON hero_attribute.attribute_id = attribute.id \nWHERE gender.gender = 'Female' AND attribute.attribute_name = 'Strength' AND hero_attribute.attribute_value = 100\t----- bird -----\tsuperhero",
    "259": "SELECT \n    (COUNT(DISTINCT superhero.id) * 100.0 / (SELECT COUNT(*) FROM superhero)) AS percentage,\n    COUNT(DISTINCT CASE WHEN publisher.publisher_name = 'Marvel Comics' THEN superhero.id END) AS marvel_count\nFROM \n    superhero\nJOIN \n    alignment ON superhero.alignment_id = alignment.id\nJOIN \n    publisher ON superhero.publisher_id = publisher.id\nWHERE \n    alignment.alignment = 'Bad'\t----- bird -----\tsuperhero",
    "260": "SELECT \n    (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) - \n    (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics')) \nAS difference_in_superheroes_published\t----- bird -----\tsuperhero",
    "261": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek'\t----- bird -----\tsuperhero",
    "262": "SELECT COUNT(*) \nFROM superhero \nWHERE full_name IS NULL\t----- bird -----\tsuperhero",
    "263": "SELECT AVG(weight_kg) \nFROM superhero \nJOIN gender ON superhero.gender_id = gender.id \nWHERE gender.gender = 'Female'\t----- bird -----\tsuperhero",
    "264": "SELECT power_name \nFROM superpower \nWHERE id IN (\n    SELECT power_id \n    FROM hero_power \n    WHERE hero_id IN (\n        SELECT id \n        FROM superhero \n        WHERE gender_id = (\n            SELECT id \n            FROM gender \n            WHERE gender = 'Male'\n        )\n    )\n)\nLIMIT 5\t----- bird -----\tsuperhero",
    "265": "SELECT superhero_name \nFROM superhero \nJOIN colour ON superhero.eye_colour_id = colour.id \nWHERE height_cm BETWEEN 170 AND 190 AND colour = 'No Colour'\t----- bird -----\tsuperhero",
    "266": "SELECT colour.colour \nFROM superhero \nJOIN race ON superhero.race_id = race.id \nJOIN colour ON superhero.hair_colour_id = colour.id \nWHERE race.race = 'human' AND superhero.height_cm = 185\t----- bird -----\tsuperhero",
    "267": "SELECT \n    (COUNT(case when publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') then 1 end) * 100.0 / COUNT(*)) as percentage\nFROM \n    superhero\nWHERE \n    height_cm BETWEEN 150 AND 180\t----- bird -----\tsuperhero",
    "268": "SELECT superhero_name \nFROM superhero \nJOIN gender ON superhero.gender_id = gender.id \nWHERE gender.gender = 'Male' AND weight_kg > (SELECT AVG(weight_kg) * 0.79 FROM superhero)\t----- bird -----\tsuperhero",
    "269": "SELECT power_name \nFROM superpower \nJOIN hero_power ON superpower.id = hero_power.power_id \nWHERE hero_power.hero_id = 1\t----- bird -----\tsuperhero",
    "270": "SELECT COUNT(*) \nFROM superhero \nJOIN hero_power ON superhero.id = hero_power.hero_id \nJOIN superpower ON hero_power.power_id = superpower.id \nWHERE superpower.power_name = 'Stealth'\t----- bird -----\tsuperhero",
    "271": "SELECT superhero.full_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'strength'\nORDER BY hero_attribute.attribute_value DESC\nLIMIT 1\t----- bird -----\tsuperhero",
    "272": "SELECT superhero.superhero_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE publisher.publisher_name = 'Dark Horse Comics' AND attribute.attribute_name = 'durability'\nORDER BY hero_attribute.attribute_value DESC\nLIMIT 1\t----- bird -----\tsuperhero",
    "273": "SELECT superhero.superhero_name, eye_colour.colour AS eye_colour, hair_colour.colour AS hair_colour, skin_colour.colour AS skin_colour\nFROM superhero\nJOIN gender ON superhero.gender_id = gender.id\nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id\nJOIN colour AS skin_colour ON superhero.skin_colour_id = skin_colour.id\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE gender.gender = 'Female' AND publisher.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "274": "SELECT superhero.superhero_name, publisher.publisher_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE superhero.eye_colour_id = superhero.hair_colour_id \nAND superhero.hair_colour_id = superhero.skin_colour_id\t----- bird -----\tsuperhero",
    "275": "SELECT \n    (CAST(SUM(CASE WHEN c.colour = 'Blue' THEN 1 ELSE 0 END) AS FLOAT) / COUNT(*)) * 100 AS percentage\nFROM \n    superhero s\nJOIN \n    colour c ON s.eye_colour_id = c.id\nJOIN \n    gender g ON s.gender_id = g.id\nWHERE \n    g.gender = 'Female'\t----- bird -----\tsuperhero",
    "276": "SELECT COUNT(power_id) \nFROM hero_power \nWHERE hero_id = (SELECT id FROM superhero WHERE superhero_name = 'Amazo')\t----- bird -----\tsuperhero",
    "277": "SELECT superhero_name, height_cm \nFROM superhero \nJOIN colour ON superhero.eye_colour_id = colour.id \nWHERE colour.colour = 'Amber'\t----- bird -----\tsuperhero",
    "278": "SELECT superhero.superhero_name \nFROM superhero \nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id \nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id \nWHERE eye_colour.colour = 'Black' AND hair_colour.colour = 'Black'\t----- bird -----\tsuperhero",
    "279": "SELECT superhero_name \nFROM superhero \nJOIN alignment ON superhero.alignment_id = alignment.id \nWHERE alignment.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "280": "SELECT COUNT(*) \nFROM superhero \nWHERE id IN (\n    SELECT hero_id \n    FROM hero_attribute \n    WHERE attribute_id = (\n        SELECT id \n        FROM attribute \n        WHERE attribute_name = 'Strength'\n    ) \n    AND attribute_value = (\n        SELECT MAX(attribute_value) \n        FROM hero_attribute \n        WHERE attribute_id = (\n            SELECT id \n            FROM attribute \n            WHERE attribute_name = 'Strength'\n        )\n    )\n)\t----- bird -----\tsuperhero",
    "281": "SELECT \n    (COUNT(*) * 100) / (SELECT COUNT(*) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics') AS percentage\nFROM \n    superhero \nJOIN \n    gender ON superhero.gender_id = gender.id \nJOIN \n    publisher ON superhero.publisher_id = publisher.id \nWHERE \n    gender.gender = 'Female' AND publisher.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "282": "SELECT \n    ABS((SELECT weight_kg FROM superhero WHERE full_name = 'Emil Blonsky') - \n    (SELECT weight_kg FROM superhero WHERE full_name = 'Charles Chandler')) AS weight_difference\t----- bird -----\tsuperhero",
    "283": "SELECT AVG(height_cm) FROM superhero\t----- bird -----\tsuperhero",
    "284": "SELECT power_name \nFROM superpower \nJOIN hero_power ON superpower.id = hero_power.power_id \nJOIN superhero ON hero_power.hero_id = superhero.id \nWHERE superhero.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "285": "SELECT superhero.superhero_name \nFROM superhero \nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id \nJOIN attribute ON hero_attribute.attribute_id = attribute.id \nWHERE attribute.attribute_name = 'Speed' \nORDER BY hero_attribute.attribute_value DESC \nLIMIT 1\t----- bird -----\tsuperhero",
    "286": "SELECT superhero.superhero_name, attribute.attribute_name, hero_attribute.attribute_value\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE superhero.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "287": "SELECT superhero_name \nFROM superhero \nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id \nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id \nWHERE eye_colour.colour = 'Blue' AND hair_colour.colour = 'Brown'\t----- bird -----\tsuperhero",
    "288": "SELECT publisher.publisher_name \nFROM publisher \nJOIN superhero ON publisher.id = superhero.publisher_id \nWHERE superhero.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')\t----- bird -----\tsuperhero",
    "289": "SELECT \n    (CAST((SELECT COUNT(*) FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'Blue')) AS FLOAT) / CAST((SELECT COUNT(*) FROM superhero) AS FLOAT)) * 100.0 AS percentage_blue_eyes\nFROM \n    superhero\t----- bird -----\tsuperhero",
    "290": "SELECT \n    (SELECT COUNT(*) FROM superhero WHERE gender_id = 1) / \n    (SELECT COUNT(*) FROM superhero WHERE gender_id = 2) AS ratio\nFROM superhero\nLIMIT 1\t----- bird -----\tsuperhero",
    "291": "SELECT colour.colour \nFROM superhero \nJOIN colour ON superhero.eye_colour_id = colour.id \nWHERE superhero.full_name = 'Karen Beecher-Duncan'\t----- bird -----\tsuperhero",
    "292": "SELECT \n    (SELECT COUNT(*) FROM superhero WHERE eye_colour_id = 7 AND (weight_kg = 0 OR weight_kg IS NULL)) - \n    (SELECT COUNT(*) FROM superhero WHERE eye_colour_id = 1 AND (weight_kg = 0 OR weight_kg IS NULL)) \nAS difference\t----- bird -----\tsuperhero",
    "293": "SELECT COUNT(*) \nFROM superhero \nJOIN colour ON superhero.skin_colour_id = colour.id \nJOIN alignment ON superhero.alignment_id = alignment.id \nWHERE colour.colour = 'Green' AND alignment.alignment = 'Bad'\t----- bird -----\tsuperhero",
    "294": "SELECT superhero_name \nFROM superhero \nJOIN hero_power ON superhero.id = hero_power.hero_id \nJOIN superpower ON hero_power.power_id = superpower.id \nWHERE superpower.power_name = 'Wind Control' \nORDER BY superhero_name ASC\t----- bird -----\tsuperhero",
    "295": "SELECT gender.gender \nFROM superhero \nJOIN gender ON superhero.gender_id = gender.id \nJOIN hero_power ON superhero.id = hero_power.hero_id \nJOIN superpower ON hero_power.power_id = superpower.id \nWHERE superpower.power_name = 'Phoenix Force'\t----- bird -----\tsuperhero",
    "296": "SELECT \n    ABS((SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics')) - \n    (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics'))) AS difference_in_superheroes\t----- bird -----\tsuperhero",
    "297": "SELECT DisplayName, MAX(Reputation) as Reputation \nFROM users \nWHERE DisplayName IN ('Harlan', 'Jarrod Dixon') \nGROUP BY DisplayName \nORDER BY Reputation DESC \nLIMIT 1\t----- bird -----\tcodebase_community",
    "298": "SELECT DisplayName \nFROM users \nWHERE strftime('%Y', CreationDate) = '2011'\t----- bird -----\tcodebase_community",
    "299": "SELECT COUNT(*) \nFROM users \nWHERE LastAccessDate > '2014-09-01'\t----- bird -----\tcodebase_community",
    "300": "SELECT users.DisplayName \nFROM users \nJOIN posts ON users.Id = posts.OwnerUserId \nWHERE posts.Title = \"Eliciting priors from experts\"\t----- bird -----\tcodebase_community",
    "301": "SELECT COUNT(*) \nFROM posts \nWHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie')\t----- bird -----\tcodebase_community",
    "302": "SELECT DisplayName \nFROM users \nWHERE Id = (\n    SELECT LastEditorUserId \n    FROM posts \n    WHERE Title = \"Examples for teaching: Correlation does not mean causation\"\n)\t----- bird -----\tcodebase_community",
    "303": "SELECT COUNT(*) \nFROM posts \nWHERE OwnerUserId IN (SELECT Id FROM users WHERE Age > 65) \nAND Score >= 20\t----- bird -----\tcodebase_community",
    "304": "SELECT Body \nFROM posts \nWHERE Id = (\n    SELECT ExcerptPostId \n    FROM tags \n    WHERE TagName = \"bayesian\"\n)\t----- bird -----\tcodebase_community",
    "305": "SELECT AVG(posts.Score) \nFROM posts \nJOIN users ON posts.OwnerUserId = users.Id \nWHERE users.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "306": "SELECT \n    (CAST(COUNT(DISTINCT CASE WHEN users.Age > 65 THEN posts.Id END) AS FLOAT) / COUNT(DISTINCT posts.Id)) * 100 AS percentage\nFROM \n    posts\nJOIN \n    users ON posts.OwnerUserId = users.Id\nWHERE \n    posts.Score > 5\t----- bird -----\tcodebase_community",
    "307": "SELECT posts.FavoriteCount\nFROM comments\nJOIN posts ON comments.PostId = posts.Id\nWHERE comments.UserId = 3025 AND comments.CreationDate = '2014-04-23 20:29:39'\t----- bird -----\tcodebase_community",
    "308": "SELECT \n    CASE \n        WHEN posts.ClosedDate IS NULL THEN 'No' \n        ELSE 'Yes' \n    END AS 'Is Post Well-Finished?' \nFROM \n    comments \nJOIN \n    posts ON comments.PostId = posts.Id \nWHERE \n    comments.UserId = 23853 \n    AND comments.CreationDate = '2013-07-12 09:08:18.0'\t----- bird -----\tcodebase_community",
    "309": "SELECT COUNT(*) \nFROM posts \nWHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Tiago Pasqualini')\t----- bird -----\tcodebase_community",
    "310": "SELECT users.DisplayName \nFROM users \nJOIN votes ON users.Id = votes.UserId \nWHERE votes.Id = 6347\t----- bird -----\tcodebase_community",
    "311": "SELECT \n    (SELECT COUNT(*) FROM posts WHERE OwnerUserId = 24) / \n    (SELECT COUNT(*) FROM votes WHERE UserId = 24) AS TimesOfPostsThanVotes\t----- bird -----\tcodebase_community",
    "312": "SELECT ViewCount \nFROM posts \nWHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'\t----- bird -----\tcodebase_community",
    "313": "SELECT Text \nFROM comments \nWHERE Score = 17\t----- bird -----\tcodebase_community",
    "314": "SELECT DisplayName \nFROM users \nWHERE Id = (SELECT UserId \n            FROM comments \n            WHERE Text = 'thank you user93!')\t----- bird -----\tcodebase_community",
    "315": "SELECT users.DisplayName, users.Reputation\nFROM users\nJOIN posts ON users.Id = posts.OwnerUserId\nWHERE posts.Title = 'Understanding what Dassault iSight is doing?'\t----- bird -----\tcodebase_community",
    "316": "SELECT users.DisplayName \nFROM users \nJOIN posts ON users.Id = posts.OwnerUserId \nWHERE posts.Title = 'Open source tools for visualizing multi-dimensional data'\t----- bird -----\tcodebase_community",
    "317": "SELECT comments.Text \nFROM comments \nJOIN posts ON comments.PostId = posts.Id \nJOIN postHistory ON posts.Id = postHistory.PostId \nWHERE posts.Title = 'Why square the difference instead of taking the absolute value in standard deviation?' \nAND postHistory.UserId = comments.UserId\t----- bird -----\tcodebase_community",
    "318": "SELECT users.DisplayName \nFROM users \nJOIN votes ON users.Id = votes.UserId \nJOIN posts ON votes.PostId = posts.Id \nWHERE votes.BountyAmount = 50 AND posts.Title LIKE '%variance%'\t----- bird -----\tcodebase_community",
    "319": "SELECT posts.Title, comments.Text, AVG(posts.ViewCount) as AverageViewCount\nFROM posts\nJOIN comments ON posts.Id = comments.PostId\nWHERE posts.Tags LIKE '%<humor>%'\nGROUP BY posts.Id\t----- bird -----\tcodebase_community",
    "320": "SELECT COUNT(UserId) \nFROM badges \nGROUP BY UserId \nHAVING COUNT(Name) > 5\t----- bird -----\tcodebase_community",
    "321": "SELECT users.Id, users.DisplayName\nFROM users\nJOIN postHistory ON users.Id = postHistory.UserId\nJOIN posts ON postHistory.PostId = posts.Id\nGROUP BY users.Id\nHAVING COUNT(postHistory.Id) = 1 AND SUM(posts.ViewCount) >= 1000\t----- bird -----\tcodebase_community",
    "322": "SELECT \n    ((SELECT COUNT(*) FROM badges WHERE Name = 'Student' AND strftime('%Y', Date) = '2010') * 100.0 / (SELECT COUNT(*) FROM badges WHERE Name = 'Student')) - \n    ((SELECT COUNT(*) FROM badges WHERE Name = 'Student' AND strftime('%Y', Date) = '2011') * 100.0 / (SELECT COUNT(*) FROM badges WHERE Name = 'Student')) AS PercentageDifference\t----- bird -----\tcodebase_community",
    "323": "SELECT AVG(users.UpVotes) AS AverageUpVotes, AVG(users.Age) AS AverageAge\nFROM users\nWHERE users.Id IN (\n    SELECT posts.OwnerUserId\n    FROM posts\n    GROUP BY posts.OwnerUserId\n    HAVING COUNT(posts.Id) > 10\n)\t----- bird -----\tcodebase_community",
    "324": "SELECT \n    (SELECT COUNT(Id) FROM votes WHERE strftime('%Y', CreationDate) = '2010') / \n    (SELECT COUNT(Id) FROM votes WHERE strftime('%Y', CreationDate) = '2011') AS Ratio\nFROM votes\nLIMIT 1\t----- bird -----\tcodebase_community",
    "325": "SELECT Id, MAX(AnswerCount) \nFROM posts \nWHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'slashnick')\t----- bird -----\tcodebase_community",
    "326": "SELECT DisplayName, MAX(SUM_ViewCount) AS Max_ViewCount\nFROM (\n    SELECT users.DisplayName, SUM(posts.ViewCount) AS SUM_ViewCount\n    FROM posts\n    INNER JOIN users ON posts.OwnerUserId = users.Id\n    WHERE users.DisplayName IN ('Harvey Motulsky', 'Noah Snyder')\n    GROUP BY users.DisplayName\n) \nORDER BY Max_ViewCount DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "327": "SELECT DISTINCT tags.TagName \nFROM tags \nJOIN posts ON tags.Id = posts.Id \nJOIN users ON posts.OwnerUserId = users.Id \nWHERE users.DisplayName = 'Mark Meckes' AND posts.CommentCount = 0\t----- bird -----\tcodebase_community",
    "328": "SELECT \n    (COUNT(posts.Id) * 100.0 / \n    (SELECT COUNT(*) FROM posts WHERE OwnerDisplayName = 'Community')) as percentage\nFROM \n    posts\nJOIN \n    tags ON posts.Id = tags.ExcerptPostId\nWHERE \n    tags.TagName = 'r' AND posts.OwnerDisplayName = 'Community'\t----- bird -----\tcodebase_community",
    "329": "SELECT \n    (SELECT SUM(ViewCount) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Mornington')) - \n    (SELECT SUM(ViewCount) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Amos')) AS ViewCountDifference\t----- bird -----\tcodebase_community",
    "330": "SELECT AVG(Count) AS AverageMonthlyLinks\nFROM (\n    SELECT COUNT(Id) AS Count\n    FROM postLinks\n    WHERE strftime('%Y', CreationDate) = '2010' AND PostId IN (\n        SELECT Id\n        FROM posts\n        WHERE AnswerCount <= 2\n    )\n    GROUP BY strftime('%m', CreationDate)\n)\t----- bird -----\tcodebase_community",
    "331": "SELECT MIN(CreationDate) \nFROM votes \nWHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'chl')\t----- bird -----\tcodebase_community",
    "332": "SELECT users.DisplayName \nFROM users \nJOIN badges \nON users.Id = badges.UserId \nWHERE badges.Name = 'Autobiographer' \nORDER BY badges.Date \nLIMIT 1\t----- bird -----\tcodebase_community",
    "333": "SELECT COUNT(DISTINCT users.Id) \nFROM users \nJOIN posts ON users.Id = posts.OwnerUserId \nWHERE users.Location = 'United Kingdom' AND posts.FavoriteCount >= 4\t----- bird -----\tcodebase_community",
    "334": "SELECT Id, Title \nFROM posts \nWHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Harvey Motulsky') \nORDER BY ViewCount DESC \nLIMIT 1\t----- bird -----\tcodebase_community",
    "335": "SELECT posts.Id, users.DisplayName\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE strftime('%Y', posts.CreaionDate) = '2010'\nORDER BY posts.FavoriteCount DESC\nLIMIT 1\t----- bird -----\tcodebase_community",
    "336": "SELECT \n    (CAST((SELECT COUNT(*) FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.Reputation > 1000 AND strftime('%Y', posts.CreaionDate) = '2011') AS FLOAT) / CAST((SELECT COUNT(*) FROM posts) AS FLOAT)) * 100 AS Percentage\nFROM posts\nLIMIT 1\t----- bird -----\tcodebase_community",
    "337": "SELECT p.ViewCount AS TotalViews, u.DisplayName AS UserName\nFROM posts p\nJOIN users u ON p.LastEditorUserId = u.Id\nWHERE p.Title = 'Computer Game Datasets'\t----- bird -----\tcodebase_community",
    "338": "SELECT COUNT(*) \nFROM comments \nWHERE PostId = (\n    SELECT Id \n    FROM posts \n    ORDER BY Score DESC \n    LIMIT 1\n)\t----- bird -----\tcodebase_community",
    "339": "SELECT comments.Text, users.DisplayName \nFROM comments \nJOIN users ON comments.UserId = users.Id \nJOIN posts ON comments.PostId = posts.Id \nWHERE posts.Title = 'Analysing wind data with R' \nORDER BY comments.CreationDate DESC \nLIMIT 10\t----- bird -----\tcodebase_community",
    "340": "SELECT \n    (COUNT(CASE WHEN p.Score > 50 THEN 1 END) * 100.0 / COUNT(p.Id)) as Percentage\nFROM \n    posts p\nJOIN \n    users u ON p.OwnerUserId = u.Id\nWHERE \n    u.Reputation = (SELECT MAX(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "341": "SELECT ExcerptPostId, WikiPostId \nFROM tags \nWHERE TagName = 'sample'\t----- bird -----\tcodebase_community",
    "342": "SELECT users.Reputation, users.UpVotes \nFROM users \nJOIN comments ON users.Id = comments.UserId \nWHERE comments.Text = 'fine, you win :)'\t----- bird -----\tcodebase_community",
    "343": "SELECT Text \nFROM comments \nWHERE PostId IN (\n    SELECT Id \n    FROM posts \n    WHERE ViewCount BETWEEN 100 AND 150\n) \nORDER BY Score DESC \nLIMIT 1\t----- bird -----\tcodebase_community",
    "344": "SELECT COUNT(*) \nFROM comments \nJOIN posts ON comments.PostId = posts.Id \nWHERE posts.CommentCount = 1 AND comments.Score = 0\t----- bird -----\tcodebase_community",
    "345": "SELECT \n    (COUNT(DISTINCT c.UserId)* 100.0 / \n    (SELECT COUNT(DISTINCT UserId) FROM comments WHERE Score BETWEEN 5 AND 10)) as percentage\nFROM \n    comments c\nJOIN \n    users u ON c.UserId = u.Id\nWHERE \n    c.Score BETWEEN 5 AND 10 AND u.UpVotes = 0\t----- bird -----\tcodebase_community",
    "346": "SELECT * FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "347": "SELECT name \nFROM cards \nWHERE borderColor = 'borderless' \nAND (cardKingdomFoilId IS NULL OR cardKingdomId IS NULL)\t----- bird -----\tcard_games",
    "348": "SELECT cards.name \nFROM cards \nJOIN legalities ON cards.uuid = legalities.uuid \nWHERE cards.rarity = 'mythic' AND legalities.format = 'gladiator' AND legalities.status = 'Banned'\t----- bird -----\tcard_games",
    "349": "SELECT c.name, l.status\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.types LIKE '%Artifact%' AND c.side IS NULL AND l.format = 'vintage'\t----- bird -----\tcard_games",
    "350": "SELECT cards.id, cards.artist\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE (cards.power = '*' OR cards.power IS NULL) AND legalities.format = 'commander' AND legalities.status = 'Legal'\t----- bird -----\tcard_games",
    "351": "SELECT cards.id, cards.artist, rulings.text, cards.hasContentWarning\nFROM cards\nLEFT JOIN rulings ON cards.uuid = rulings.uuid\nWHERE cards.artist = 'Stephen Daniele' AND cards.hasContentWarning = 1\t----- bird -----\tcard_games",
    "352": "SELECT cards.name, cards.artist, cards.isPromo\nFROM cards\nJOIN rulings ON cards.uuid = rulings.uuid\nGROUP BY rulings.uuid\nORDER BY COUNT(rulings.uuid) DESC\nLIMIT 1\t----- bird -----\tcard_games",
    "353": "SELECT \n    (SELECT COUNT(*) FROM foreign_data WHERE language = 'Chinese Simplified') * 100.0 / COUNT(*) AS percentage\nFROM \n    foreign_data\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(*) FROM cards WHERE power = '*'\t----- bird -----\tcard_games",
    "355": "SELECT borderColor \nFROM cards \nWHERE name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "356": "SELECT legalities.format, legalities.status \nFROM legalities \nJOIN cards ON legalities.uuid = cards.uuid \nWHERE cards.name = \"Benalish Knight\"\t----- bird -----\tcard_games",
    "357": "SELECT \n    (SELECT COUNT(*) FROM cards WHERE borderColor = 'borderless') * 100.0 / COUNT(*) as percentage\nFROM \n    cards\t----- bird -----\tcard_games",
    "358": "SELECT \n    (CAST((SELECT COUNT(*) FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'French' AND cards.isStorySpotlight = 1) AS REAL) / \n    CAST((SELECT COUNT(*) FROM cards WHERE cards.isStorySpotlight = 1) AS REAL)) * 100 AS percentage\n\t----- bird -----\tcard_games",
    "359": "SELECT COUNT(*) \nFROM cards \nWHERE originalType = 'Summon - Angel' \nAND subtypes != 'Angel'\t----- bird -----\tcard_games",
    "360": "SELECT id FROM cards WHERE duelDeck = 'a'\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*) \nFROM cards \nJOIN legalities ON cards.uuid = legalities.uuid \nWHERE legalities.status = 'Banned' AND cards.borderColor = 'white'\t----- bird -----\tcard_games",
    "362": "SELECT cards.name, foreign_data.language \nFROM cards \nJOIN foreign_data ON cards.uuid = foreign_data.uuid \nWHERE cards.originalType = 'Artifact' AND cards.colors = 'B'\t----- bird -----\tcard_games",
    "363": "SELECT manaCost \nFROM cards \nWHERE layout = 'normal' \nAND frameVersion = '2003' \nAND borderColor = 'black' \nAND availability = 'mtgo,paper'\t----- bird -----\tcard_games",
    "364": "SELECT \n    (CAST(SUM(CASE WHEN isStorySpotlight = 1 AND isTextless = 1 THEN 1 ELSE 0 END) AS FLOAT) / CAST(COUNT(*) AS FLOAT)) * 100 AS percentage,\n    id\nFROM \n    cards\nWHERE \n    isStorySpotlight = 1 AND isTextless = 1\nGROUP BY \n    id\t----- bird -----\tcard_games",
    "365": "SELECT COUNT(*) \nFROM set_translations \nWHERE language = 'Portuguese (Brasil)' \nAND setCode IN (SELECT code FROM sets WHERE block = 'Commander')\t----- bird -----\tcard_games",
    "366": "SELECT subtypes, supertypes \nFROM cards \nJOIN foreign_data \nON cards.uuid = foreign_data.uuid \nWHERE language = 'German' AND subtypes IS NOT NULL AND supertypes IS NOT NULL\t----- bird -----\tcard_games",
    "367": "SELECT COUNT(*) \nFROM cards \nWHERE (power IS NULL OR power = '*') \nAND text LIKE '%triggered ability%'\t----- bird -----\tcard_games",
    "368": "SELECT COUNT(*) \nFROM cards \nJOIN legalities ON cards.uuid = legalities.uuid \nJOIN rulings ON cards.uuid = rulings.uuid \nWHERE legalities.format = 'premodern' \nAND rulings.text = 'This is a triggered mana ability.' \nAND cards.side IS NULL\t----- bird -----\tcard_games",
    "369": "SELECT foreign_data.name \nFROM foreign_data \nJOIN cards ON foreign_data.uuid = cards.uuid \nWHERE foreign_data.language = 'French' \nAND cards.type = 'Creature' \nAND cards.layout = 'normal' \nAND cards.borderColor = 'black' \nAND cards.artist = 'Matthew D. Wilson'\t----- bird -----\tcard_games",
    "370": "SELECT set_translations.language \nFROM sets \nJOIN set_translations ON sets.code = set_translations.setCode \nWHERE sets.baseSetSize = 180 AND sets.block = 'Ravnica'\t----- bird -----\tcard_games",
    "371": "SELECT \n    (COUNT(*) * 100.0 / \n        (SELECT COUNT(*) FROM cards \n        JOIN legalities ON cards.uuid = legalities.uuid \n        WHERE legalities.format = 'commander' AND legalities.status = 'legal')) AS percentage\nFROM cards \nJOIN legalities ON cards.uuid = legalities.uuid \nWHERE legalities.format = 'commander' AND legalities.status = 'legal' AND cards.hasContentWarning = 0\t----- bird -----\tcard_games",
    "372": "SELECT \n    (COUNT(CASE WHEN fd.language = 'French' THEN 1 END) * 100.0 / COUNT(*)) as percentage\nFROM \n    cards c\nLEFT JOIN \n    foreign_data fd ON c.uuid = fd.uuid\nWHERE \n    c.power IS NULL OR c.power = '*'\t----- bird -----\tcard_games",
    "373": "SELECT language FROM foreign_data WHERE multiverseid = 149934\t----- bird -----\tcard_games",
    "374": "SELECT \n    (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE isTextless = 1 AND layout = 'normal')) as proportion\nFROM \n    cards\nWHERE \n    isTextless = 1 AND layout = 'normal'\t----- bird -----\tcard_games",
    "375": "SELECT DISTINCT language \nFROM set_translations \nWHERE setCode IN (SELECT code FROM sets WHERE mcmName = 'Archenemy' AND code = 'ARC')\t----- bird -----\tcard_games",
    "376": "SELECT language \nFROM foreign_data \nWHERE name = 'A Pedra Fellwar'\t----- bird -----\tcard_games",
    "377": "SELECT name, convertedManaCost \nFROM cards \nWHERE name IN ('Serra Angel', 'Shrine Keeper') \nORDER BY convertedManaCost DESC \nLIMIT 1\t----- bird -----\tcard_games",
    "378": "SELECT translation \nFROM set_translations \nWHERE language = 'Italian' \nAND setCode = (SELECT setCode \n                FROM cards \n                WHERE name = 'Ancestor''s Chosen')\t----- bird -----\tcard_games",
    "379": "SELECT * \nFROM foreign_data \nWHERE uuid IN (SELECT uuid FROM cards WHERE name = 'Ancestor''s Chosen') \nAND language = 'Korean'\t----- bird -----\tcard_games",
    "380": "SELECT COUNT(*) \nFROM cards \nWHERE artist = 'Adam Rex' \nAND setCode IN (SELECT setCode FROM set_translations WHERE translation = 'Hauptset Zehnte Edition')\t----- bird -----\tcard_games",
    "381": "SELECT translation \nFROM set_translations \nWHERE setCode = (SELECT code FROM sets WHERE name = 'Eighth Edition') \nAND language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "382": "SELECT \n    sets.name \nFROM \n    cards \nJOIN \n    sets ON cards.setCode = sets.code \nWHERE \n    cards.name = 'Angel of Mercy' AND sets.mtgoCode IS NOT NULL\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(DISTINCT sets.code) \nFROM sets \nJOIN set_translations ON sets.code = set_translations.setCode \nWHERE sets.block = 'Ice Age' AND set_translations.language = 'Italian' AND set_translations.translation IS NOT NULL\t----- bird -----\tcard_games",
    "384": "SELECT sets.isForeignOnly \nFROM cards \nJOIN sets ON cards.setCode = sets.code \nWHERE cards.name = 'Adarkar Valkyrie'\t----- bird -----\tcard_games",
    "385": "SELECT COUNT(DISTINCT sets.code) \nFROM sets \nJOIN set_translations ON sets.code = set_translations.setCode \nWHERE set_translations.language = 'Italian' AND sets.baseSetSize < 100\t----- bird -----\tcard_games",
    "386": "SELECT artist \nFROM cards \nWHERE setCode = (SELECT code FROM sets WHERE name = 'Coldsnap') \nAND artist IN ('Jeremy Jarvis', 'Aaron Miller','Chippy')\t----- bird -----\tcard_games",
    "387": "SELECT COUNT(*) \nFROM cards T1 \nJOIN sets T2 ON T1.setCode = T2.code \nWHERE T2.name = 'Coldsnap' AND T1.convertedManaCost > 5 AND (T1.power = '*' OR T1.power is null)\t----- bird -----\tcard_games",
    "388": "SELECT flavorText \nFROM foreign_data \nJOIN cards ON foreign_data.uuid = cards.uuid \nWHERE language = 'Italian' AND name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "389": "SELECT rulings.text \nFROM rulings \nJOIN cards ON rulings.uuid = cards.uuid \nJOIN sets ON cards.setCode = sets.code \nWHERE sets.name = 'Coldsnap' AND rulings.language = 'Italian'\t----- bird -----\tcard_games",
    "390": "SELECT foreign_data.name\nFROM foreign_data\nJOIN cards ON foreign_data.uuid = cards.uuid\nJOIN sets ON cards.setCode = sets.code\nWHERE sets.name = 'Coldsnap' AND foreign_data.language = 'Italian' AND cards.convertedManaCost = (\n    SELECT MAX(convertedManaCost)\n    FROM cards\n    JOIN sets ON cards.setCode = sets.code\n    WHERE sets.name = 'Coldsnap'\n)\t----- bird -----\tcard_games",
    "391": "SELECT \n    (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setCode = 'Coldsnap')) as percentage\nFROM \n    cards\nWHERE \n    convertedManaCost = 7 AND setCode = 'Coldsnap'\t----- bird -----\tcard_games",
    "392": "SELECT \n    (CAST(SUM(CASE WHEN cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL THEN 1 ELSE 0 END) AS FLOAT) / \n    CAST(SUM(CASE WHEN setCode = 'Coldsnap' THEN 1 ELSE 0 END) AS FLOAT)) * 100 AS percentage_of_incredibly_powerful_cards\nFROM cards\t----- bird -----\tcard_games",
    "393": "SELECT format, COUNT(*) as banned_count\nFROM legalities\nWHERE status = 'Banned'\nGROUP BY format\nORDER BY banned_count DESC\nLIMIT 1\t----- bird -----\tcard_games",
    "394": "SELECT cards.name, legalities.format\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE cards.edhrecRank = 1 AND legalities.status = 'Banned'\t----- bird -----\tcard_games",
    "395": "SELECT cards.name, legalities.format\nFROM cards\nJOIN sets ON cards.setCode = sets.code\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE sets.name = 'Hour of Devastation' AND legalities.status = 'Legal'\t----- bird -----\tcard_games",
    "396": "SELECT sets.name \nFROM sets \nJOIN set_translations ON sets.code = set_translations.setCode \nWHERE sets.code NOT IN (SELECT setCode FROM set_translations WHERE language = 'Japanese') \nAND sets.code IN (SELECT setCode FROM set_translations WHERE language = 'Korean')\t----- bird -----\tcard_games",
    "397": "SELECT cards.frameVersion, cards.name, legalities.status\nFROM cards\nLEFT JOIN legalities ON cards.uuid = legalities.uuid\nWHERE cards.artist = 'Allen Williams' AND legalities.status = 'Banned'\t----- bird -----\tcard_games",
    "398": "SELECT bond_type \nFROM bond \nGROUP BY bond_type \nORDER BY COUNT(*) DESC \nLIMIT 1\t----- bird -----\ttoxicology",
    "399": "SELECT AVG(oxygen_count) \nFROM (\n  SELECT molecule_id, COUNT(*) as oxygen_count \n  FROM atom \n  WHERE element = 'o' AND molecule_id IN (\n    SELECT molecule_id \n    FROM bond \n    WHERE bond_type = '-'\n  ) \n  GROUP BY molecule_id\n)\t----- bird -----\ttoxicology",
    "400": "SELECT AVG(single_bonded)\nFROM (\n  SELECT COUNT(b.bond_id) AS single_bonded\n  FROM molecule m\n  JOIN bond b ON m.molecule_id = b.molecule_id\n  WHERE m.label = '+' AND b.bond_type = '-'\n  GROUP BY m.molecule_id\n)\t----- bird -----\ttoxicology",
    "401": "SELECT molecule.molecule_id, molecule.label \nFROM molecule \nJOIN bond ON molecule.molecule_id = bond.molecule_id \nJOIN connected ON bond.bond_id = connected.bond_id \nWHERE bond.bond_type = '\t----- bird -----\ttoxicology",
    "402": "SELECT \n    (CAST(SUM(CASE WHEN atom.element = 'c' THEN 1 ELSE 0 END) AS FLOAT) / COUNT(atom.atom_id)) * 100 AS percentage_of_carbon\nFROM \n    atom\nINNER JOIN \n    connected ON atom.atom_id = connected.atom_id\nINNER JOIN \n    bond ON connected.bond_id = bond.bond_id\nWHERE \n    bond.bond_type = '='\t----- bird -----\ttoxicology",
    "403": "SELECT atom.element \nFROM atom \nJOIN connected ON atom.atom_id = connected.atom_id \nWHERE connected.bond_id = 'TR004_8_9'\t----- bird -----\ttoxicology",
    "404": "SELECT atom.element\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id OR atom.atom_id = connected.atom_id2\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE bond.bond_type = '='\t----- bird -----\ttoxicology",
    "405": "SELECT label, COUNT(*) as count\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE element = 'h'\nGROUP BY label\nORDER BY count DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "406": "SELECT element, COUNT(element) as count\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE label = '-'\nGROUP BY element\nORDER BY count\nLIMIT 1\t----- bird -----\ttoxicology",
    "407": "SELECT bond_type \nFROM bond \nWHERE bond_id = (\n    SELECT bond_id \n    FROM connected \n    WHERE (atom_id = 'TR004_8' AND atom_id2 = 'TR004_20') \n    OR (atom_id = 'TR004_20' AND atom_id2 = 'TR004_8')\n)\t----- bird -----\ttoxicology",
    "408": "SELECT COUNT(DISTINCT atom.atom_id)\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE atom.element IN ('i', 's') AND bond.bond_type = '-'\t----- bird -----\ttoxicology",
    "409": "SELECT \n    (COUNT(DISTINCT m.molecule_id) - SUM(CASE WHEN a.element = 'f' THEN 1 ELSE 0 END)) * 100.0 / COUNT(DISTINCT m.molecule_id) AS percentage\nFROM \n    molecule m\nLEFT JOIN \n    atom a ON m.molecule_id = a.molecule_id\nWHERE \n    m.label = '+'\n\t----- bird -----\ttoxicology",
    "410": "SELECT \n    (CAST(SUM(CASE WHEN bond_type = '\t----- bird -----\ttoxicology",
    "411": "SELECT element \nFROM atom \nWHERE molecule_id = 'TR000' \nORDER BY element ASC \nLIMIT 3\t----- bird -----\ttoxicology",
    "412": "SELECT \n    ROUND(\n        (SELECT COUNT(*) FROM bond WHERE bond_type = '=' AND molecule_id = 'TR008') * 100.0 / \n        (SELECT COUNT(*) FROM bond WHERE molecule_id = 'TR008'), \n    5) AS percentage_of_double_bonds\nFROM \n    molecule\nWHERE \n    molecule_id = 'TR008'\t----- bird -----\ttoxicology",
    "413": "SELECT ROUND((SELECT COUNT(*) FROM molecule WHERE label = '+') * 100.0 / COUNT(*), 3) AS percentage FROM molecule\t----- bird -----\ttoxicology",
    "414": "SELECT \n    (CAST(SUM(CASE WHEN element = 'h' THEN 1 ELSE 0 END) AS FLOAT) / COUNT(atom_id)) * 100 AS percent\nFROM \n    atom\nWHERE \n    molecule_id = 'TR206'\t----- bird -----\ttoxicology",
    "415": "SELECT atom.element, molecule.label \nFROM atom \nJOIN molecule ON atom.molecule_id = molecule.molecule_id \nWHERE molecule.molecule_id = 'TR060'\t----- bird -----\ttoxicology",
    "416": "SELECT bond_type, COUNT(bond_type) as bond_count\nFROM bond\nJOIN molecule ON bond.molecule_id = molecule.molecule_id\nWHERE molecule.molecule_id = 'TR010'\nGROUP BY bond_type\nORDER BY bond_count DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "417": "SELECT molecule_id \nFROM molecule \nWHERE molecule_id IN (\n    SELECT molecule_id \n    FROM bond \n    WHERE bond_type = '-' \n    AND molecule_id IN (\n        SELECT molecule_id \n        FROM atom \n        WHERE atom_id IN (\n            SELECT atom_id \n            FROM connected \n            WHERE bond_id IN (\n                SELECT bond_id \n                FROM bond \n                WHERE bond_type = '-'\n            )\n        )\n    )\n) \nAND label = '-' \nORDER BY molecule_id \nLIMIT 3\t----- bird -----\ttoxicology",
    "418": "SELECT COUNT(*) \nFROM bond \nWHERE molecule_id = 'TR009' \nAND bond_id IN (\n    SELECT bond_id \n    FROM connected \n    WHERE atom_id = 'TR009_12' OR atom_id2 = 'TR009_12'\n)\t----- bird -----\ttoxicology",
    "419": "SELECT bond.bond_type, connected.atom_id, connected.atom_id2 \nFROM bond \nJOIN connected ON bond.bond_id = connected.bond_id \nWHERE bond.bond_id = 'TR001_6_9'\t----- bird -----\ttoxicology",
    "420": "SELECT COUNT(bond_id) \nFROM connected \nWHERE atom_id LIKE 'TR%_19'\t----- bird -----\ttoxicology",
    "421": "SELECT atom.element \nFROM atom \nINNER JOIN molecule ON atom.molecule_id = molecule.molecule_id \nWHERE molecule.molecule_id = \"TR004\"\t----- bird -----\ttoxicology",
    "422": "SELECT DISTINCT molecule.molecule_id, molecule.label\nFROM molecule\nJOIN atom ON molecule.molecule_id = atom.molecule_id\nWHERE SUBSTR(atom.atom_id, 7, 2) BETWEEN '21' AND '25' AND molecule.label = '+'\t----- bird -----\ttoxicology",
    "423": "SELECT bond.bond_id, bond.bond_type\nFROM bond\nJOIN connected AS c1 ON bond.bond_id = c1.bond_id\nJOIN atom AS a1 ON c1.atom_id = a1.atom_id\nJOIN connected AS c2 ON bond.bond_id = c2.bond_id\nJOIN atom AS a2 ON c2.atom_id = a2.atom_id\nWHERE (a1.element = 'p' AND a2.element = 'n') OR (a1.element = 'n' AND a2.element = 'p')\t----- bird -----\ttoxicology",
    "424": "SELECT m.label = '+' AS is_carcinogenic\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nWHERE b.bond_type = ' = '\nGROUP BY m.molecule_id\nORDER BY COUNT(*) DESC\nLIMIT 1\t----- bird -----\ttoxicology",
    "425": "SELECT AVG(bond_count) \nFROM (\n  SELECT COUNT(b.connected.bond_id) as bond_count\n  FROM atom a\n  LEFT JOIN connected b ON a.atom_id = b.atom_id\n  WHERE a.element = 'i'\n  GROUP BY a.atom_id\n)\t----- bird -----\ttoxicology",
    "426": "SELECT element \nFROM atom \nWHERE atom_id NOT IN (SELECT atom_id FROM connected)\t----- bird -----\ttoxicology",
    "427": "SELECT atom.atom_id \nFROM atom \nJOIN connected ON atom.atom_id = connected.atom_id \nJOIN bond ON connected.bond_id = bond.bond_id \nWHERE bond.bond_type = '\t----- bird -----\ttoxicology",
    "428": "SELECT atom.element \nFROM atom \nJOIN connected ON atom.atom_id = connected.atom_id \nWHERE connected.bond_id = 'TR144_8_19'\t----- bird -----\ttoxicology",
    "429": "SELECT atom.element\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE bond.bond_type = '\t----- bird -----\ttoxicology",
    "430": "SELECT \n    ROUND(\n        (\n            SELECT COUNT(*) \n            FROM `bond` \n            JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` \n            WHERE `bond_type` = '-' AND `label` = '+'\n        ) * 100.0 / \n        (\n            SELECT COUNT(*) \n            FROM `bond` \n            WHERE `bond_type` = '-'\n        ), \n        5\n    ) AS proportion\n\t----- bird -----\ttoxicology",
    "431": "SELECT COUNT(DISTINCT atom.atom_id)\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE bond.bond_type = '\t----- bird -----\ttoxicology",
    "432": "SELECT \n    (SUM(CASE WHEN atom.element = 'cl' THEN 1 ELSE 0 END) * 100.0 / COUNT(atom.atom_id)) as percent\nFROM \n    atom\nJOIN \n    connected ON atom.atom_id = connected.atom_id\nJOIN \n    bond ON connected.bond_id = bond.bond_id\nWHERE \n    bond.bond_type = '-'\t----- bird -----\ttoxicology",
    "433": "SELECT a.element \nFROM atom a \nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 \nWHERE c.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "434": "SELECT \n    (SELECT COUNT(*) FROM atom WHERE element = 'cl' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '+')) * 100.0 / \n    (SELECT COUNT(*) FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '+')) as percentage\t----- bird -----\ttoxicology",
    "435": "SELECT element, COUNT(*) as count\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE substr(atom.atom_id, 7, 1) = '4' AND molecule.label = '+'\nGROUP BY element\t----- bird -----\ttoxicology",
    "436": "SELECT \n    SUM(CASE WHEN element = 'h' THEN 1 ELSE 0 END) / COUNT(element) AS ratio,\n    m.label\nFROM \n    atom a\nJOIN \n    molecule m ON a.molecule_id = m.molecule_id\nWHERE \n    a.molecule_id = 'TR006'\t----- bird -----\ttoxicology",
    "437": "SELECT molecule_id, label\nFROM molecule\nWHERE label = '-' AND molecule_id IN (\n  SELECT molecule_id\n  FROM atom\n  GROUP BY molecule_id\n  HAVING COUNT(atom_id) > 5\n)\t----- bird -----\ttoxicology",
    "438": "SELECT COUNT(*) \nFROM schools \nJOIN satscores ON schools.CDSCode = satscores.cds \nWHERE satscores.AvgScrMath > 400 AND schools.Virtual = 'F'\t----- bird -----\tcalifornia_schools",
    "439": "SELECT CDSCode \nFROM frpm \nWHERE (`Enrollment (K-12)` + `Enrollment (Ages 5-17)`) > 500\t----- bird -----\tcalifornia_schools",
    "440": "SELECT MAX(frpm.`Percent (%) Eligible Free (Ages 5-17)`) \nFROM satscores \nJOIN frpm ON satscores.cds = frpm.CDSCode \nWHERE (satscores.NumGE1500 / satscores.NumTstTakr) > 0.3\t----- bird -----\tcalifornia_schools",
    "441": "SELECT schools.CharterNum, satscores.AvgScrWrite\nFROM schools\nJOIN satscores ON schools.CDSCode = satscores.cds\nWHERE satscores.AvgScrWrite > 499 AND schools.CharterNum IS NOT NULL\nORDER BY satscores.AvgScrWrite DESC\t----- bird -----\tcalifornia_schools",
    "442": "SELECT schools.`School`, schools.`Street`\nFROM schools\nJOIN frpm ON schools.CDSCode = frpm.CDSCode\nWHERE ABS(frpm.`Enrollment (K-12)` - frpm.`Enrollment (Ages 5-17)`) > 30\t----- bird -----\tcalifornia_schools",
    "443": "SELECT s.School \nFROM schools s \nJOIN frpm f ON s.CDSCode = f.CDSCode \nJOIN satscores ss ON s.CDSCode = ss.cds \nWHERE (f.`Free Meal Count (K-12)` / f.`Enrollment (K-12)`) > 0.1 \nAND ss.NumGE1500 >= 1500\t----- bird -----\tcalifornia_schools",
    "444": "SELECT schools.School, schools.FundingType\nFROM schools\nJOIN satscores ON schools.CDSCode = satscores.cds\nWHERE schools.County = 'Riverside' AND satscores.AvgScrMath > 400\nGROUP BY schools.School\nHAVING AVG(satscores.AvgScrMath) > 400\t----- bird -----\tcalifornia_schools",
    "445": "SELECT `School Name`, Street, City, State, Zip\nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE `County Name` = 'Monterey' AND `High Grade` = '12' AND `FRPM Count (Ages 5-17)` > 800\t----- bird -----\tcalifornia_schools",
    "446": "SELECT schools.School, satscores.AvgScrWrite, schools.Phone\nFROM schools\nJOIN satscores ON schools.CDSCode = satscores.cds\nWHERE schools.OpenDate > '1991-12-31' OR schools.ClosedDate < '2000-01-01'\t----- bird -----\tcalifornia_schools",
    "447": "SELECT s.School, s.DOCTYPE\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.FundingType = 'Locally Funded' AND (f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)`) > \n    (SELECT AVG(f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)`)\n     FROM schools s\n     JOIN frpm f ON s.CDSCode = f.CDSCode\n     WHERE s.FundingType = 'Locally Funded')\t----- bird -----\tcalifornia_schools",
    "448": "SELECT `School Name`, (`Free Meal Count (K-12)` / `Enrollment (K-12)`) as `Eligible Free Rate`\nFROM frpm\nORDER BY `Enrollment (K-12)` DESC\nLIMIT 9, 2\t----- bird -----\tcalifornia_schools",
    "449": "SELECT \n    `School Name`, \n    (`FRPM Count (K-12)` / `Enrollment (K-12)`) as `Eligible FRPM Rate`\nFROM \n    frpm \nJOIN \n    schools \nON \n    frpm.CDSCode = schools.CDSCode \nWHERE \n    schools.DOC = '66' \nORDER BY \n    `FRPM Count (K-12)` DESC \nLIMIT 5\t----- bird -----\tcalifornia_schools",
    "450": "SELECT Street, City, Zip, State\nFROM schools\nWHERE CDSCode = (\n    SELECT cds\n    FROM satscores\n    WHERE NumTstTakr != 0\n    ORDER BY NumGE1500 / NumTstTakr ASC\n    LIMIT 1\n)\t----- bird -----\tcalifornia_schools",
    "451": "SELECT AdmFName1, AdmLName1, AdmFName2, AdmLName2, AdmFName3, AdmLName3\nFROM schools\nWHERE CDSCode = (\n    SELECT cds\n    FROM satscores\n    ORDER BY NumGE1500 DESC\n    LIMIT 1\n)\t----- bird -----\tcalifornia_schools",
    "452": "SELECT AVG(satscores.NumTstTakr) \nFROM satscores \nJOIN schools ON satscores.cds = schools.CDSCode \nWHERE schools.OpenDate BETWEEN '1980-01-01' AND '1980-12-31' \nAND schools.County = 'Fresno'\t----- bird -----\tcalifornia_schools",
    "453": "SELECT Phone \nFROM schools \nWHERE CDSCode = (\n    SELECT cds \n    FROM satscores \n    WHERE dname = 'Fresno Unified' \n    ORDER BY AvgScrRead ASC \n    LIMIT 1\n)\t----- bird -----\tcalifornia_schools",
    "454": "SELECT sname\nFROM (\n    SELECT sname, cname, AvgScrRead, \n    ROW_NUMBER() OVER(PARTITION BY cname ORDER BY AvgScrRead DESC) as rank\n    FROM satscores\n    JOIN schools ON satscores.cds = schools.CDSCode\n    WHERE Virtual = 'F'\n)\nWHERE rank <= 5\t----- bird -----\tcalifornia_schools",
    "455": "SELECT schools.School, AVG(satscores.AvgScrWrite) as Average_Writing_Score\nFROM schools\nJOIN satscores ON schools.CDSCode = satscores.cds\nWHERE schools.AdmFName1 = 'Ricci' AND schools.AdmLName1 = 'Ulrich'\nGROUP BY schools.School\t----- bird -----\tcalifornia_schools",
    "456": "SELECT sname, enroll12 \nFROM satscores \nJOIN schools ON satscores.cds = schools.CDSCode \nWHERE DOC = 31 \nORDER BY enroll12 DESC \nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "457": "SELECT AVG(NumSchools) AS AvgNumSchoolsPerMonth\nFROM (\n    SELECT COUNT(*) AS NumSchools\n    FROM schools\n    WHERE County = 'Alameda' AND DOC = '52' AND strftime('%Y', OpenDate) = '1980'\n    GROUP BY strftime('%m', OpenDate)\n)\t----- bird -----\tcalifornia_schools",
    "458": "SELECT \n    (SELECT COUNT(*) FROM schools WHERE DOC = '54' AND County = 'Orange') / \n    (SELECT COUNT(*) FROM schools WHERE DOC = '52' AND County = 'Orange') AS Ratio\nFROM schools\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "459": "SELECT Street, School \nFROM schools \nWHERE CDSCode = (\n    SELECT cds \n    FROM satscores \n    ORDER BY AvgScrMath DESC \n    LIMIT 1 OFFSET 6\n)\t----- bird -----\tcalifornia_schools",
    "460": "SELECT COUNT(*) \nFROM schools s \nJOIN frpm f ON s.CDSCode = f.CDSCode \nWHERE s.Charter = 0 \nAND s.County = 'Los Angeles' \nAND (f.`Free Meal Count (K-12)` / f.`Enrollment (K-12)`) < 0.0018\t----- bird -----\tcalifornia_schools",
    "461": "SELECT `Enrollment (Ages 5-17)`\nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE `Academic Year` = '2014-2015' AND School = 'Fremont' AND EdOpsCode = 'SSS'\t----- bird -----\tcalifornia_schools",
    "462": "SELECT schools.School, (frpm.`FRPM Count (Ages 5-17)` / frpm.`Enrollment (Ages 5-17)` * 100) as `Percent (%) Eligible FRPM (Ages 5-17)`\nFROM schools\nJOIN frpm ON schools.CDSCode = frpm.CDSCode\nWHERE schools.County = 'Los Angeles' AND schools.GSoffered = 'K-9'\t----- bird -----\tcalifornia_schools",
    "463": "SELECT County, COUNT(*) as Num_Schools\nFROM schools\nWHERE Virtual = 'F' AND (County = 'San Diego' OR County = 'Santa Barbara')\nGROUP BY County\nORDER BY Num_Schools DESC\nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "464": "SELECT GSoffered \nFROM schools \nWHERE Longitude = (SELECT MAX(Longitude) FROM schools)\t----- bird -----\tcalifornia_schools",
    "465": "SELECT City, COUNT(DISTINCT School) as Num_Schools\nFROM schools\nJOIN frpm ON schools.CDSCode = frpm.CDSCode\nWHERE Magnet = 1 AND GSoffered = 'K-8' AND `NSLP Provision Status` = 'Multiple Provision Types'\nGROUP BY City\t----- bird -----\tcalifornia_schools",
    "466": "SELECT frpm.`District Code`, (frpm.`Free Meal Count (K-12)` / frpm.`Enrollment (K-12)`) * 100 as `Percent (%) Eligible Free (K-12)`\nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE schools.AdmFName1 = 'Alusine'\t----- bird -----\tcalifornia_schools",
    "467": "SELECT AdmEmail1, AdmEmail2, AdmEmail3 \nFROM schools \nWHERE County = 'San Bernardino' \nAND District = 'San Bernardino City Unified' \nAND OpenDate BETWEEN '2009-01-01' AND '2010-12-31' \nAND SOC = '62' \nAND DOC = '54'\t----- bird -----\tcalifornia_schools",
    "468": "SELECT COUNT(*) \nFROM account \nJOIN district ON account.district_id = district.district_id \nWHERE account.frequency = 'POPLATEK PO OBRATU' AND district.A3 = 'East Bohemia'\t----- bird -----\tfinancial",
    "469": "SELECT COUNT(district_id) \nFROM district \nWHERE A11 > 6000 AND A11 < 10000 AND district_id IN (SELECT district_id FROM client WHERE gender = 'F')\t----- bird -----\tfinancial",
    "470": "SELECT COUNT(*) \nFROM client \nJOIN district ON client.district_id = district.district_id \nWHERE client.gender = 'M' AND district.A3 = 'North Bohemia' AND district.A11 > 8000\t----- bird -----\tfinancial",
    "471": "SELECT account.account_id, district.A11, (max_salary - district.A11) as gap\nFROM account\nJOIN disp ON account.account_id = disp.account_id\nJOIN client ON disp.client_id = client.client_id\nJOIN district ON client.district_id = district.district_id\nJOIN (SELECT MAX(A11) as max_salary FROM district) as max_district\nWHERE client.gender = 'F' AND client.birth_date = (SELECT MIN(birth_date) FROM client WHERE gender = 'F')\nORDER BY district.A11 ASC\nLIMIT 1\t----- bird -----\tfinancial",
    "472": "SELECT account_id \nFROM account \nWHERE client_id IN (\n    SELECT client_id \n    FROM client \n    WHERE birth_date = (\n        SELECT MAX(birth_date) \n        FROM client\n    ) \n) \nAND district_id IN (\n    SELECT district_id \n    FROM district \n    WHERE A11 = (\n        SELECT MAX(A11) \n        FROM district\n    )\n)\t----- bird -----\tfinancial",
    "473": "SELECT account.account_id, loan.amount\nFROM account\nJOIN loan ON account.account_id = loan.account_id\nWHERE loan.status = 'A' AND loan.date LIKE '1997%' AND account.frequency = 'POPLATEK TYDNE'\nORDER BY loan.amount ASC\nLIMIT 1\t----- bird -----\tfinancial",
    "474": "SELECT account.account_id, loan.amount, account.date\nFROM account\nJOIN loan ON account.account_id = loan.account_id\nWHERE loan.duration > 12 AND loan.amount = (SELECT MAX(amount) FROM loan WHERE duration > 12) AND strftime('%Y', account.date) = '1993'\t----- bird -----\tfinancial",
    "475": "SELECT COUNT(*) \nFROM client \nJOIN disp ON client.client_id = disp.client_id \nJOIN account ON disp.account_id = account.account_id \nJOIN district ON client.district_id = district.district_id \nWHERE client.gender = 'F' \nAND client.birth_date < '1950-01-01' \nAND district.A2 = 'Sokolov' \nAND disp.type = 'OWNER'\t----- bird -----\tfinancial",
    "476": "SELECT district.A2 \nFROM district \nJOIN client ON district.district_id = client.district_id \nJOIN disp ON client.client_id = disp.client_id \nJOIN account ON disp.account_id = account.account_id \nWHERE client.gender = 'F' AND client.birth_date = '1976-01-29'\t----- bird -----\tfinancial",
    "477": "SELECT \n    (COUNT(client.gender)* 100.0 / (SELECT COUNT(*) FROM client WHERE district_id = (SELECT district_id FROM district WHERE A3 = 'south Bohemia' ORDER BY A4 DESC LIMIT 1))) as percentage\nFROM \n    client\nWHERE \n    gender = 'M' AND district_id = (SELECT district_id FROM district WHERE A3 = 'south Bohemia' ORDER BY A4 DESC LIMIT 1)\t----- bird -----\tfinancial",
    "478": "SELECT ((t2.balance - t1.balance) / t1.balance) * 100 AS increase_rate\nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nJOIN trans t1 ON a.account_id = t1.account_id AND t1.date = '1993-03-22'\nJOIN trans t2 ON a.account_id = t2.account_id AND t2.date = '1998-12-27'\nWHERE l.date = '1993-07-05'\nORDER BY l.date\nLIMIT 1\t----- bird -----\tfinancial",
    "479": "SELECT \n    (SUM(CASE WHEN status = 'A' THEN amount ELSE 0 END) / SUM(amount)) * 100 AS percentage_fully_paid\nFROM loan\t----- bird -----\tfinancial",
    "480": "SELECT \n    (CAST(COUNT(*) AS REAL) / (SELECT COUNT(*) FROM loan WHERE amount < 100000)) * 100 AS percentage\nFROM \n    loan\nWHERE \n    amount < 100000 AND status = 'C'\t----- bird -----\tfinancial",
    "481": "SELECT district.A2 AS district, ((district.A13 - district.A12) / district.A12) * 100 AS unemployment_rate_increment\nFROM loan\nJOIN account ON loan.account_id = account.account_id\nJOIN disp ON account.account_id = disp.account_id\nJOIN client ON disp.client_id = client.client_id\nJOIN district ON client.district_id = district.district_id\nWHERE loan.status = 'D'\t----- bird -----\tfinancial",
    "482": "SELECT district.A2, COUNT(*) as female_account_holders\nFROM district\nJOIN client ON district.district_id = client.district_id\nJOIN disp ON client.client_id = disp.client_id\nJOIN account ON disp.account_id = account.account_id\nWHERE client.gender = 'F' AND disp.type = 'OWNER'\nGROUP BY district.A2\nORDER BY female_account_holders DESC\nLIMIT 9\t----- bird -----\tfinancial",
    "483": "SELECT COUNT(*) \nFROM loan \nJOIN account ON loan.account_id = account.account_id \nWHERE loan.amount >= 250000 \nAND account.frequency = 'POPLATEK MESICNE' \nAND loan.date BETWEEN '1995-01-01' AND '1997-12-31' \nAND loan.status = 'A'\t----- bird -----\tfinancial",
    "484": "SELECT COUNT(DISTINCT account.account_id)\nFROM account\nJOIN district ON account.district_id = district.district_id\nJOIN loan ON account.account_id = loan.account_id\nWHERE district.A1 = 1 AND (loan.status = 'C' OR loan.status = 'D')\t----- bird -----\tfinancial",
    "485": "SELECT COUNT(*) \nFROM client \nWHERE gender = 'M' AND district_id = (\n    SELECT district_id \n    FROM district \n    WHERE A15 = (\n        SELECT MAX(A15) \n        FROM district \n        WHERE A15 < (\n            SELECT MAX(A15) \n            FROM district\n        )\n    )\n)\t----- bird -----\tfinancial",
    "486": "SELECT district.A2 as district_name, trans.amount as withdrawal_amount\nFROM trans\nJOIN account ON trans.account_id = account.account_id\nJOIN district ON account.district_id = district.district_id\nWHERE trans.type = 'VYDAJ' AND trans.date LIKE '1996-01%'\nORDER BY trans.amount DESC\nLIMIT 10\t----- bird -----\tfinancial",
    "487": "SELECT COUNT(DISTINCT account.account_id)\nFROM account\nJOIN district ON account.district_id = district.district_id\nJOIN loan ON account.account_id = loan.account_id\nWHERE district.A1 = 1 AND (loan.status = 'C' OR loan.status = 'D')\t----- bird -----\tfinancial",
    "488": "SELECT COUNT(*) \nFROM client \nWHERE gender = 'M' AND district_id = (\n    SELECT district_id \n    FROM district \n    WHERE A15 = (\n        SELECT MAX(A15) \n        FROM district \n        WHERE A15 < (\n            SELECT MAX(A15) \n            FROM district\n        )\n    )\n)\t----- bird -----\tfinancial",
    "489": "SELECT account_id \nFROM trans \nWHERE operation = 'VYBER KARTOU' \nAND amount < (SELECT AVG(amount) FROM trans) \nAND date BETWEEN '1998-01-01' AND '1998-12-31'\t----- bird -----\tfinancial",
    "490": "SELECT DISTINCT account.frequency\nFROM account\nLEFT JOIN loan ON account.account_id = loan.account_id\nINNER JOIN district ON account.district_id = district.district_id\nWHERE loan.account_id IS NULL AND district.A11 > 8000 AND district.A11 <= 9000\t----- bird -----\tfinancial",
    "491": "SELECT AVG(district.A15) \nFROM district \nJOIN account ON district.district_id = account.district_id \nWHERE district.A15 > 4000 AND strftime('%Y', account.date) >= '1997'\t----- bird -----\tfinancial",
    "492": "SELECT trans.*\nFROM trans\nJOIN disp ON trans.account_id = disp.account_id\nWHERE disp.client_id = 3356 AND trans.operation = 'VYBER'\t----- bird -----\tfinancial",
    "493": "SELECT \n    (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM client WHERE client_id IN \n        (SELECT client_id FROM disp WHERE account_id IN \n            (SELECT account_id FROM account WHERE district_id IN \n                (SELECT district_id FROM district WHERE A11 > 10000))))) AS percentage\nFROM \n    client \nWHERE \n    gender = 'F' AND client_id IN \n        (SELECT client_id FROM disp WHERE account_id IN \n            (SELECT account_id FROM account WHERE district_id IN \n                (SELECT district_id FROM district WHERE A11 > 10000)))\t----- bird -----\tfinancial",
    "494": "SELECT \n    ((SUM(case when strftime('%Y', l.date) = '1997' then l.amount else 0 end) - \n    SUM(case when strftime('%Y', l.date) = '1996' then l.amount else 0 end)) / \n    SUM(case when strftime('%Y', l.date) = '1996' then l.amount else 0 end)) * 100 as growth_rate\nFROM \n    loan l\nJOIN \n    disp d ON l.account_id = d.account_id\nJOIN \n    client c ON d.client_id = c.client_id\nWHERE \n    c.gender = 'M'\t----- bird -----\tfinancial",
    "495": "SELECT COUNT(*), k_symbol \nFROM trans \nWHERE account_id = 3 AND operation = 'account statement' \nGROUP BY k_symbol\t----- bird -----\tfinancial",
    "496": "SELECT \n    (COUNT(*) * 100.0 / \n        (SELECT COUNT(*) \n         FROM client \n         JOIN disp ON client.client_id = disp.client_id \n         JOIN account ON disp.account_id = account.account_id \n         WHERE account.frequency = 'POPLATEK TYDNE')) AS percentage \nFROM client \nJOIN disp ON client.client_id = disp.client_id \nJOIN account ON disp.account_id = account.account_id \nWHERE client.gender = 'M' AND account.frequency = 'POPLATEK TYDNE'\t----- bird -----\tfinancial",
    "497": "SELECT account.account_id\nFROM account\nJOIN disp ON account.account_id = disp.account_id\nJOIN client ON disp.client_id = client.client_id\nJOIN district ON client.district_id = district.district_id\nWHERE client.gender = 'F'\nGROUP BY account.account_id\nHAVING client.birth_date = (SELECT MIN(birth_date) FROM client WHERE gender = 'F')\nAND district.A11 = (SELECT MIN(A11) FROM district)\t----- bird -----\tfinancial",
    "498": "SELECT AVG(amount) \nFROM loan \nWHERE status IN ('C', 'D') \nAND account_id IN (SELECT account_id FROM trans WHERE operation = 'POPLATEK PO OBRATU')\t----- bird -----\tfinancial",
    "499": "SELECT client.client_id, (julianday('now') - julianday(client.birth_date))/365 as age\nFROM client\nJOIN disp ON client.client_id = disp.client_id\nJOIN card ON disp.disp_id = card.disp_id\nJOIN loan ON disp.account_id = loan.account_id\nWHERE card.type = 'gold' AND disp.type = 'OWNER'\t----- bird -----\tfinancial"
}